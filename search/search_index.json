{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \ud83d\udd17 SinusBot is a MusicBot that will let you listen to music together with your friends on either TeamSpeak 3 or Discord. But it doesn't stop there - there's a lot of user-made scripts that can let SinusBot manage your Server and enhance the experience of your users in several ways. You and your friends can control the bot either through the included web interface or via commands through TeamSpeak 3 or Discord. What you need \ud83d\udd17 The SinusBot can run on either Windows or Linux, but only on the 64bit versions of those operating systems. Most users usually want their bot to run 24/7 and thus will rent a Linux server on the internet and install it there. If you don't know how to handle a Linux server, you can also have your SinusBot managed by one of our partners for a little fee and just focus on the functionality.","title":"Introduction"},{"location":"#introduction","text":"SinusBot is a MusicBot that will let you listen to music together with your friends on either TeamSpeak 3 or Discord. But it doesn't stop there - there's a lot of user-made scripts that can let SinusBot manage your Server and enhance the experience of your users in several ways. You and your friends can control the bot either through the included web interface or via commands through TeamSpeak 3 or Discord.","title":"Introduction"},{"location":"#what-you-need","text":"The SinusBot can run on either Windows or Linux, but only on the 64bit versions of those operating systems. Most users usually want their bot to run 24/7 and thus will rent a Linux server on the internet and install it there. If you don't know how to handle a Linux server, you can also have your SinusBot managed by one of our partners for a little fee and just focus on the functionality.","title":"What you need"},{"location":"configuration/","text":"Configuration \ud83d\udd17 Usually you don't need to edit too much in the config.ini file as most of the important stuff can be managed via the web interface. Some functionality however can be enabled or tweaked in here. Please be careful with the settings and should you encounter problems, always make sure that you tell us what you changed in here! General \ud83d\udd17 Field Value Default EnableDebugConsole (internal use only) true EnableLocalFS (internal use only) false EnableProfiler (internal use only; deprecated) false EnableWebStream allow the bot to export the audio stream via http or icecast false ExternalFileBase a path where an external music library is stored DataDir This can be used to specify the data directory the bot should use. ./data relative to bot Hostname Hostname to use for the certificate when UseSSL is enabled InstanceActionLimit number of http requests / actions (per instance and second) before a limit will prevent further actions 6 IsProxied if enabled, the bot will trust proxied headers and use the IPs from there false License one or more valid licenses LicenseKey host specific license key; used for license-requests. Don't change it! ListenHost IP-address the bot should listen on 0.0.0.0 (listen on all interfaces/IP-addresses) ListenPort Port the bot should listen on 8087 LocalPlayback (internal use only) false LogFile if specified, output will be logged to this file instead of stdout MaxBulkOperations number of entries that can be moved with one operation (add to playlist, move to folder and such) 300 LogLevel verbosity of the log 3 (errors and warnings) Pragma (caution!) used to override database version; DO NOT SET! RunAsGroup gid to use for privilege drop 0 RunAsUser uid to use for privilege drop 0 SampleInterval DON'T TOUCH, WILL BREAK THINGS! SSLCertFile certificate to use for SSL connections SSLKeyFile private key to use for SSL connections Token random security token, generated on first start; to change, remove it TS3Path Path to the TeamSpeak 3 Client executable UploadLimit maximum number of bytes a file is allowed to have when uploading 83886080 (80M) UseSSL if set to true, the bot will only accept https-connections; Hostname MUST be specified false YoutubeDLPath Path the the youtube-dl executable youtube-dl TS3 \ud83d\udd17 Field Value Default AvatarMaxWidth if set, all uploaded avatars will be limited (resized) to this value 0 (no limit) AvatarMaxHeight if set, all uploaded avatars will be limited (resized) to this value 0 (no limit) AllowGIF allows avatar to be a GIF YoutubeDL \ud83d\udd17 Field Value Default BufferSize number of bytes to use for buffering (useful to tune on slow connections) CacheStreamed if streaming via youtube-dl, enabling this will cause the streams to get stored inside the cache directory; please be aware that you have to delete the cache files manually (that's safe to do) ChunkSize Size in bytes that will determine count of simultaneous download streams (limited by MaxSimultaneousChunkDownloads) 3 MB MaxDownloadSize maximum size of files to download via youtube-dl MaxDownloadRate if you want to slow down youtube-dl to prevent traffic spikes, use this MaxSimultaneousChunkDownloads overall limit of simultaneous download streams per job 10 TimeoutMultiDownloader timeout (in seconds) for chunks of a multi stream download 5 Minutes TimeoutSingleDownloader time (in seconds) before a downloader cancels 30 Minutes Plugins \ud83d\udd17 This section will hold configuration values for used plugins. Please see the manual of the plugin to use for what settings are required. Scripts \ud83d\udd17 Field Value Default AllowReload Enables a script function that allows hot script reloading (added scripts will still need a restart of the bot) false DevMode If set to true (default is false), all scripts will be reloaded once a script file gets changed. false SpeechRecognition \ud83d\udd17 Field Value Default Enable Enable speech recognition; requires additional files to work false XServer \ud83d\udd17 Field Value Default Delay Throttle XServer events to save CPU cycles (DON'T CHANGE) 0 Debug (internal only) false DAV (deprecated) \ud83d\udd17 Field Value Default Enable Enables serving the music files via DAV backend; experimental; deprecated false FFmpeg \ud83d\udd17 Field Value Default UserAgent Can be used to replace the default user-agent header FFmpeg uses","title":"Configuration"},{"location":"configuration/#configuration","text":"Usually you don't need to edit too much in the config.ini file as most of the important stuff can be managed via the web interface. Some functionality however can be enabled or tweaked in here. Please be careful with the settings and should you encounter problems, always make sure that you tell us what you changed in here!","title":"Configuration"},{"location":"configuration/#general","text":"Field Value Default EnableDebugConsole (internal use only) true EnableLocalFS (internal use only) false EnableProfiler (internal use only; deprecated) false EnableWebStream allow the bot to export the audio stream via http or icecast false ExternalFileBase a path where an external music library is stored DataDir This can be used to specify the data directory the bot should use. ./data relative to bot Hostname Hostname to use for the certificate when UseSSL is enabled InstanceActionLimit number of http requests / actions (per instance and second) before a limit will prevent further actions 6 IsProxied if enabled, the bot will trust proxied headers and use the IPs from there false License one or more valid licenses LicenseKey host specific license key; used for license-requests. Don't change it! ListenHost IP-address the bot should listen on 0.0.0.0 (listen on all interfaces/IP-addresses) ListenPort Port the bot should listen on 8087 LocalPlayback (internal use only) false LogFile if specified, output will be logged to this file instead of stdout MaxBulkOperations number of entries that can be moved with one operation (add to playlist, move to folder and such) 300 LogLevel verbosity of the log 3 (errors and warnings) Pragma (caution!) used to override database version; DO NOT SET! RunAsGroup gid to use for privilege drop 0 RunAsUser uid to use for privilege drop 0 SampleInterval DON'T TOUCH, WILL BREAK THINGS! SSLCertFile certificate to use for SSL connections SSLKeyFile private key to use for SSL connections Token random security token, generated on first start; to change, remove it TS3Path Path to the TeamSpeak 3 Client executable UploadLimit maximum number of bytes a file is allowed to have when uploading 83886080 (80M) UseSSL if set to true, the bot will only accept https-connections; Hostname MUST be specified false YoutubeDLPath Path the the youtube-dl executable youtube-dl","title":"General"},{"location":"configuration/#ts3","text":"Field Value Default AvatarMaxWidth if set, all uploaded avatars will be limited (resized) to this value 0 (no limit) AvatarMaxHeight if set, all uploaded avatars will be limited (resized) to this value 0 (no limit) AllowGIF allows avatar to be a GIF","title":"TS3"},{"location":"configuration/#youtubedl","text":"Field Value Default BufferSize number of bytes to use for buffering (useful to tune on slow connections) CacheStreamed if streaming via youtube-dl, enabling this will cause the streams to get stored inside the cache directory; please be aware that you have to delete the cache files manually (that's safe to do) ChunkSize Size in bytes that will determine count of simultaneous download streams (limited by MaxSimultaneousChunkDownloads) 3 MB MaxDownloadSize maximum size of files to download via youtube-dl MaxDownloadRate if you want to slow down youtube-dl to prevent traffic spikes, use this MaxSimultaneousChunkDownloads overall limit of simultaneous download streams per job 10 TimeoutMultiDownloader timeout (in seconds) for chunks of a multi stream download 5 Minutes TimeoutSingleDownloader time (in seconds) before a downloader cancels 30 Minutes","title":"YoutubeDL"},{"location":"configuration/#plugins","text":"This section will hold configuration values for used plugins. Please see the manual of the plugin to use for what settings are required.","title":"Plugins"},{"location":"configuration/#scripts","text":"Field Value Default AllowReload Enables a script function that allows hot script reloading (added scripts will still need a restart of the bot) false DevMode If set to true (default is false), all scripts will be reloaded once a script file gets changed. false","title":"Scripts"},{"location":"configuration/#speechrecognition","text":"Field Value Default Enable Enable speech recognition; requires additional files to work false","title":"SpeechRecognition"},{"location":"configuration/#xserver","text":"Field Value Default Delay Throttle XServer events to save CPU cycles (DON'T CHANGE) 0 Debug (internal only) false","title":"XServer"},{"location":"configuration/#dav-deprecated","text":"Field Value Default Enable Enables serving the music files via DAV backend; experimental; deprecated false","title":"DAV (deprecated)"},{"location":"configuration/#ffmpeg","text":"Field Value Default UserAgent Can be used to replace the default user-agent header FFmpeg uses","title":"FFmpeg"},{"location":"licenses/","text":"Licenses \ud83d\udd17 Please note the following restrictions Licenses are only available for the Linux version of the bot. Licenses are only available for TeamSpeak and not Discord. Private use only, see Disclaimer . So you own a large server and two instances are not enough for you? For this case we're handing out free extended licenses which come with 4 more instances by default, so you've got a total of 6. How to get a free extended license? \ud83d\udd17 We issue approx. one of those licenses per day (that's about 30 per month) but as this is a manual process, we do it in batches every couple of days. You can apply for such a license (if one is available) at our License Page . If you've successfully committed the request, your license will be issued with the next batch. Please make sure to input the correct information as you would have to request a new license otherwise. But all free licenses have been taken. Is there another way to obtain one? \ud83d\udd17 We do have a \"Donor\" group on our forums that you will get automatically if you donate . With this group, the License Page will directly be open to you and you can request a license right away. However, please be aware that your license will not be issued directly but with the next batch (see above). How long does it take for the license to be approved? \ud83d\udd17 As mentioned above, licenses are done in batches every couple of days. It usually takes between 24 to 72 hours. How long is such a license valid? \ud83d\udd17 A license will also be valid for at least a major release (e.g. 2.0 could require a new license compared to 1.0). We currently don't have plans to invalidate any license given out before 1.0 with the release of 1.0. Licenses are not bound to the TeamSpeak-Server UID nor the IP address anymore; the license is still valid even if they change. How do I install the license? \ud83d\udd17 Once you've received a license you just have to download the private.dat file from the License Page and save/copy it into the same folder the bot is installed in (normally that should be in /opt/sinusbot/ ). After restarting the SinusBot the new instances will appear automatically. If no instances appear afterwards then you did something wrong. Make sure that... private.dat is in the directory where the SinusBot is installed (typically /opt/sinusbot/ if you followed our guide or used the installer) private.dat is owned and readable by the SinusBot user ( chown sinusbot:sinusbot /opt/sinusbot/private.dat ) private.dat was uploaded correctly Disclaimer \ud83d\udd17 Every request will be checked manually and we reserve the right to deny requests without further notice (e.g. in case of abuse). We also reserve the right to discontinue this service or change the terms at any time. Whether you use a SinusBot license or not, the license agreement applies in any case (see Settings -> Info -> About in your SinusBot web-interface). You may NOT redistribute this software or use this software commercially without prior written permission from the author. See FAQ for more information.","title":"Licenses"},{"location":"licenses/#licenses","text":"Please note the following restrictions Licenses are only available for the Linux version of the bot. Licenses are only available for TeamSpeak and not Discord. Private use only, see Disclaimer . So you own a large server and two instances are not enough for you? For this case we're handing out free extended licenses which come with 4 more instances by default, so you've got a total of 6.","title":"Licenses"},{"location":"licenses/#how-to-get-a-free-extended-license","text":"We issue approx. one of those licenses per day (that's about 30 per month) but as this is a manual process, we do it in batches every couple of days. You can apply for such a license (if one is available) at our License Page . If you've successfully committed the request, your license will be issued with the next batch. Please make sure to input the correct information as you would have to request a new license otherwise.","title":"How to get a free extended license?"},{"location":"licenses/#but-all-free-licenses-have-been-taken-is-there-another-way-to-obtain-one","text":"We do have a \"Donor\" group on our forums that you will get automatically if you donate . With this group, the License Page will directly be open to you and you can request a license right away. However, please be aware that your license will not be issued directly but with the next batch (see above).","title":"But all free licenses have been taken. Is there another way to obtain one?"},{"location":"licenses/#how-long-does-it-take-for-the-license-to-be-approved","text":"As mentioned above, licenses are done in batches every couple of days. It usually takes between 24 to 72 hours.","title":"How long does it take for the license to be approved?"},{"location":"licenses/#how-long-is-such-a-license-valid","text":"A license will also be valid for at least a major release (e.g. 2.0 could require a new license compared to 1.0). We currently don't have plans to invalidate any license given out before 1.0 with the release of 1.0. Licenses are not bound to the TeamSpeak-Server UID nor the IP address anymore; the license is still valid even if they change.","title":"How long is such a license valid?"},{"location":"licenses/#how-do-i-install-the-license","text":"Once you've received a license you just have to download the private.dat file from the License Page and save/copy it into the same folder the bot is installed in (normally that should be in /opt/sinusbot/ ). After restarting the SinusBot the new instances will appear automatically. If no instances appear afterwards then you did something wrong. Make sure that... private.dat is in the directory where the SinusBot is installed (typically /opt/sinusbot/ if you followed our guide or used the installer) private.dat is owned and readable by the SinusBot user ( chown sinusbot:sinusbot /opt/sinusbot/private.dat ) private.dat was uploaded correctly","title":"How do I install the license?"},{"location":"licenses/#disclaimer","text":"Every request will be checked manually and we reserve the right to deny requests without further notice (e.g. in case of abuse). We also reserve the right to discontinue this service or change the terms at any time. Whether you use a SinusBot license or not, the license agreement applies in any case (see Settings -> Info -> About in your SinusBot web-interface). You may NOT redistribute this software or use this software commercially without prior written permission from the author. See FAQ for more information.","title":"Disclaimer"},{"location":"locales/","text":"Localize the SinusBot \ud83d\udd17 Before you begin you may check the resources if there already exists a translation. \\ Is there an outdated translation and the author does not answer your request? Report the translation on the forums. Just follow these steps: Make sure you have a folder called data/locales within in your SinusBot directory Create a new file called ru.json (if you want to create a Russian translation for example) with the following contents: {\"__name\": \"Russian\", \"__code\": \"ru-RU\"} Open up the web-interface of the bot and navigate to your personal settings Choose Russian as your language Then click on \"edit\" behind the language selection Fill all the text boxes next to the phrases you would like to translate Hit \"Export\" at the bottom of the page Copy the contents of the export box to your ru.json Done. The translation interface will highlight untranslated content in yellow and phrases that have not been saved yet in violet. We're giving out extended licenses and access to pre-releases to everyone who contributes a lot or even maintains a translation. ;-)","title":"Localization"},{"location":"locales/#localize-the-sinusbot","text":"Before you begin you may check the resources if there already exists a translation. \\ Is there an outdated translation and the author does not answer your request? Report the translation on the forums. Just follow these steps: Make sure you have a folder called data/locales within in your SinusBot directory Create a new file called ru.json (if you want to create a Russian translation for example) with the following contents: {\"__name\": \"Russian\", \"__code\": \"ru-RU\"} Open up the web-interface of the bot and navigate to your personal settings Choose Russian as your language Then click on \"edit\" behind the language selection Fill all the text boxes next to the phrases you would like to translate Hit \"Export\" at the bottom of the page Copy the contents of the export box to your ru.json Done. The translation interface will highlight untranslated content in yellow and phrases that have not been saved yet in violet. We're giving out extended licenses and access to pre-releases to everyone who contributes a lot or even maintains a translation. ;-)","title":"Localize the SinusBot"},{"location":"scripts/","text":"Using & creating Scripts \ud83d\udd17 Your bot can be extended by installing scripts from other users or by writing and activating your own scripts. Such scripts can react on several events and control how the bot should react to them. This can be a simple 'Hello' response when someone writes 'hello' to the bot or a pretty detailed leveling/XP system where the bot tracks the online time of each user. You can find many scripts from other users here . The language the scripts have to be in is JavaScript (ECMAScript Version 5). Since version 1.0 you can now also use newer ES6 features. The full API documentation of the API that is available to you can be found here . How to install a script? \ud83d\udd17 When you download scripts manually, you should get files that end with .js. Copy those files into the scripts folder within the installation directory. A bot restart is required whenever you add or remove a script manually. Should you have downloaded a zip/rar or whatever file, make sure to unpack it first. Some scripts also come with more files than just the main script file. In such cases make sure you copy them exactly in the same structure as you've downloaded them (keeping all folders that came with the script). This is usually true for scripts that come with their own web interface. Writing a script \ud83d\udd17 So you've searched for a script and found nothing that fully suits you, right? The best way to get started with writing a script is usually to have a look at other scripts first and try to understand how they work. If you for example want to have a custom welcome script, have a look at how the existing ones work and make slight adjustments instead of directly writing it from scratch. The source code of scripts should usually be readable so you can extend / modify them. Should you plan to publish changes to another script however, make sure you contact the original author and ask for permission. Writing a script from scratch \ud83d\udd17 Basic structure and manifest \ud83d\udd17 Every script must register itself using the registerPlugin function. This function takes two arguments: the manifest as an object the setup function of your script First, let's see what a manifest consists of. The manifest will determine which features are available to the script and also contain metadata and variables that will be shown in the web interface. It's also used to make sure the script works with the current version of the bot. registerPlugin ({ name : 'Demo Script' , version : '1.0' , description : 'This example actually does nothing' , author : 'your name <your-email@example.com>' , vars : [], autorun : true }, function ( sinusbot , config ) { ... }); Mandatory fields \ud83d\udd17 name (string) \ud83d\udd17 The name field should contain a short name of your script. author (string) \ud83d\udd17 Put your name and your email address in here in the form of your name <your-email@example.com> description (string) \ud83d\udd17 This should contain a longer description - tell the user what exactly your script does. version (string) \ud83d\udd17 Start with something like 1.0 and increase it with every release. Optional fields \ud83d\udd17 autorun (bool) \ud83d\udd17 Set to true, if you want the script to be run on every instance, without the option to disable it. backends ([]string) \ud83d\udd17 Per default, scripts will only be available on TS3 instances. If your script supports Discord (or in the future maybe other backends) as well, you have to specify this explicitly by setting this variable to an array containing all backends like so: backends: [\"ts3\", \"discord\"] enableWeb (bool) \ud83d\udd17 If your script required own web content, you can set enableWeb to true and put files into the ./scripts/scriptname/html directory. After restart, the script title will be clickable and lead to an index.html inside that html-directory you just created. From there you have access to the localStorage variables containing the login and may communicate with the bot api from your own pages. engine (string) \ud83d\udd17 Sets the required engine version (bot version). This uses Semantic Versioning . Example: >= 0.9.16 hidden (bool) \ud83d\udd17 Hides the script from the settings page. Should be used together with autorun . Hidden scripts can not have variables (vars), since they'd never be shown and thus not configurable. requiredModules ([]string) \ud83d\udd17 Using this, you can define which restricted modules the script wants to use. The script has to be re-enabled by the user if the required modules change. This field is mandatory if you use any restricted module from version 1.0 onward. vars (array) \ud83d\udd17 This is probably the most complex parameter as this defines the configuration interface that will be shown on the web interface of the bot. Current available variable types: Type Input string Show a regular input element where the user can enter some text password like string but doesn't display the text you've entered strings set multiple strings multiline this will display a text area where the user can enter several lines of text number Show a regular input element, but only accept numeric input from the user track %%Show an input where the user can search and specify a track that has been uploaded to the bot - the config variable will later on contain an object like this: tracks select multiple tracks channel If the bot is connected, this displays a channel selector. The config variable will later on hold the channel-id of the selected channel select this will display a select box. All options need to specified in an array called options and the config value will later on hold the index to the selected option. checkbox this will display a checkbox array this allows the user to add an unspecified amount of items Example of the string type usage: { name : 'ExampleName' , title : 'message type' , type : 'string' , placeholder : 'Some example placeholder' } Example of the select type usage: { name : 'fooType' , title : 'Variations of foobar' , type : 'select' , options : [ 'Foo' , 'Bar' , 'Foobar' , 'Barfoo' ] } Example of the condition type with the above options example: { name : 'fooSwitch' , title : 'Selected fooType' , type : 'select' , conditions : [{ //make a field visible or invisible in the config with conditions field : 'fooType' , //this will tell to use the config field with the name \"fooType\" value : 2 , //this will tell to use the 3rd index of the options of the selected type in this case \"Foobar\" }] } You can print these values in the log by using: engine . log ( config . ExampleName ); engine . log ( config . fooType ); voiceCommands ([]string) \ud83d\udd17 This parameter is only used for the speech recognition feature and may contain one or more strings that are to be detected for the given script. Note that the speech recognition only works with licensed instances. You can find more details on how to use it here . The Setup-Function \ud83d\udd17 Following the manifest, you hand over a function to registerPlugin that will be called upon activation with two or more parameters. The first one, sinusbot , can be ignored if you use the new scripting engine. The second one will hold the configuration of the plugin that the user set from within the web interface (given you have added anything to the vars field of your script manifest). Use this function to setup event listeners and do stuff on initialization. Example registerPlugin ({ ... }, function ( sinusbot , config ) { var event = require ( 'event' ); event . on ( 'chat' , function ( chatEvent ) { // Do something... }); }); As said, the function will get called once the script gets activated either by enabling it in the web interface or when autorun is enabled. In this example an event handler is installed that will be called whenever a chat message has been sent.","title":"Scripting"},{"location":"scripts/#using-creating-scripts","text":"Your bot can be extended by installing scripts from other users or by writing and activating your own scripts. Such scripts can react on several events and control how the bot should react to them. This can be a simple 'Hello' response when someone writes 'hello' to the bot or a pretty detailed leveling/XP system where the bot tracks the online time of each user. You can find many scripts from other users here . The language the scripts have to be in is JavaScript (ECMAScript Version 5). Since version 1.0 you can now also use newer ES6 features. The full API documentation of the API that is available to you can be found here .","title":"Using &amp; creating Scripts"},{"location":"scripts/#how-to-install-a-script","text":"When you download scripts manually, you should get files that end with .js. Copy those files into the scripts folder within the installation directory. A bot restart is required whenever you add or remove a script manually. Should you have downloaded a zip/rar or whatever file, make sure to unpack it first. Some scripts also come with more files than just the main script file. In such cases make sure you copy them exactly in the same structure as you've downloaded them (keeping all folders that came with the script). This is usually true for scripts that come with their own web interface.","title":"How to install a script?"},{"location":"scripts/#writing-a-script","text":"So you've searched for a script and found nothing that fully suits you, right? The best way to get started with writing a script is usually to have a look at other scripts first and try to understand how they work. If you for example want to have a custom welcome script, have a look at how the existing ones work and make slight adjustments instead of directly writing it from scratch. The source code of scripts should usually be readable so you can extend / modify them. Should you plan to publish changes to another script however, make sure you contact the original author and ask for permission.","title":"Writing a script"},{"location":"scripts/#writing-a-script-from-scratch","text":"","title":"Writing a script from scratch"},{"location":"scripts/#basic-structure-and-manifest","text":"Every script must register itself using the registerPlugin function. This function takes two arguments: the manifest as an object the setup function of your script First, let's see what a manifest consists of. The manifest will determine which features are available to the script and also contain metadata and variables that will be shown in the web interface. It's also used to make sure the script works with the current version of the bot. registerPlugin ({ name : 'Demo Script' , version : '1.0' , description : 'This example actually does nothing' , author : 'your name <your-email@example.com>' , vars : [], autorun : true }, function ( sinusbot , config ) { ... });","title":"Basic structure and manifest"},{"location":"scripts/#mandatory-fields","text":"","title":"Mandatory fields"},{"location":"scripts/#name-string","text":"The name field should contain a short name of your script.","title":"name (string)"},{"location":"scripts/#author-string","text":"Put your name and your email address in here in the form of your name <your-email@example.com>","title":"author (string)"},{"location":"scripts/#description-string","text":"This should contain a longer description - tell the user what exactly your script does.","title":"description (string)"},{"location":"scripts/#version-string","text":"Start with something like 1.0 and increase it with every release.","title":"version (string)"},{"location":"scripts/#optional-fields","text":"","title":"Optional fields"},{"location":"scripts/#autorun-bool","text":"Set to true, if you want the script to be run on every instance, without the option to disable it.","title":"autorun (bool)"},{"location":"scripts/#backends-string","text":"Per default, scripts will only be available on TS3 instances. If your script supports Discord (or in the future maybe other backends) as well, you have to specify this explicitly by setting this variable to an array containing all backends like so: backends: [\"ts3\", \"discord\"]","title":"backends ([]string)"},{"location":"scripts/#enableweb-bool","text":"If your script required own web content, you can set enableWeb to true and put files into the ./scripts/scriptname/html directory. After restart, the script title will be clickable and lead to an index.html inside that html-directory you just created. From there you have access to the localStorage variables containing the login and may communicate with the bot api from your own pages.","title":"enableWeb (bool)"},{"location":"scripts/#engine-string","text":"Sets the required engine version (bot version). This uses Semantic Versioning . Example: >= 0.9.16","title":"engine (string)"},{"location":"scripts/#hidden-bool","text":"Hides the script from the settings page. Should be used together with autorun . Hidden scripts can not have variables (vars), since they'd never be shown and thus not configurable.","title":"hidden (bool)"},{"location":"scripts/#requiredmodules-string","text":"Using this, you can define which restricted modules the script wants to use. The script has to be re-enabled by the user if the required modules change. This field is mandatory if you use any restricted module from version 1.0 onward.","title":"requiredModules ([]string)"},{"location":"scripts/#vars-array","text":"This is probably the most complex parameter as this defines the configuration interface that will be shown on the web interface of the bot. Current available variable types: Type Input string Show a regular input element where the user can enter some text password like string but doesn't display the text you've entered strings set multiple strings multiline this will display a text area where the user can enter several lines of text number Show a regular input element, but only accept numeric input from the user track %%Show an input where the user can search and specify a track that has been uploaded to the bot - the config variable will later on contain an object like this: tracks select multiple tracks channel If the bot is connected, this displays a channel selector. The config variable will later on hold the channel-id of the selected channel select this will display a select box. All options need to specified in an array called options and the config value will later on hold the index to the selected option. checkbox this will display a checkbox array this allows the user to add an unspecified amount of items Example of the string type usage: { name : 'ExampleName' , title : 'message type' , type : 'string' , placeholder : 'Some example placeholder' } Example of the select type usage: { name : 'fooType' , title : 'Variations of foobar' , type : 'select' , options : [ 'Foo' , 'Bar' , 'Foobar' , 'Barfoo' ] } Example of the condition type with the above options example: { name : 'fooSwitch' , title : 'Selected fooType' , type : 'select' , conditions : [{ //make a field visible or invisible in the config with conditions field : 'fooType' , //this will tell to use the config field with the name \"fooType\" value : 2 , //this will tell to use the 3rd index of the options of the selected type in this case \"Foobar\" }] } You can print these values in the log by using: engine . log ( config . ExampleName ); engine . log ( config . fooType );","title":"vars (array)"},{"location":"scripts/#voicecommands-string","text":"This parameter is only used for the speech recognition feature and may contain one or more strings that are to be detected for the given script. Note that the speech recognition only works with licensed instances. You can find more details on how to use it here .","title":"voiceCommands ([]string)"},{"location":"scripts/#the-setup-function","text":"Following the manifest, you hand over a function to registerPlugin that will be called upon activation with two or more parameters. The first one, sinusbot , can be ignored if you use the new scripting engine. The second one will hold the configuration of the plugin that the user set from within the web interface (given you have added anything to the vars field of your script manifest). Use this function to setup event listeners and do stuff on initialization. Example registerPlugin ({ ... }, function ( sinusbot , config ) { var event = require ( 'event' ); event . on ( 'chat' , function ( chatEvent ) { // Do something... }); }); As said, the function will get called once the script gets activated either by enabling it in the web interface or when autorun is enabled. In this example an event handler is installed that will be called whenever a chat message has been sent.","title":"The Setup-Function"},{"location":"speechrecognition/","text":"Speech Recognition \ud83d\udd17 Speech Recognition is not very reliable and currently only works on TeamSpeak. This is a little tutorial on how to use speech recognition. The feature is still highly experimental and will cause increased CPU & RAM usage. I've tried to make it so it only activates if it is really necessary. Discuss this feature on the forums. Requirements \ud83d\udd17 you need at least SinusBot version 0.13.37 you will need to provide the commands that should be recognized beforehand for now there is no continuous recognition only 3 speakers will be recognized simultaneously, additional speakers will be ignored until one of the initial 3 speakers will stop speaking; in most cases that is more than enough speech recognition will only work on licensed instances for now TS3 only Preparation \ud83d\udd17 set Enable = true in section [SpeechRecognition] of the config.ini Download https://www.sinusbot.com/pre/speech.tar.bz2 Extract that file to the same directory as your SinusBot (so you will have a new folder speech inside the SinusBot directory) Create a script that uses the speech recognition engine Restart the bot Code Example \ud83d\udd17 registerPlugin ({ name : 'Speech Recognition Demo' , version : '1.0' , description : 'This is a simple script that will stop playback when you say \"stop\"' , author : 'Michael Friese <michael@sinusbot.com>' , vars : [], voiceCommands : [ 'stop' ] }, function ( sinusbot , config ) { var event = require ( 'event' ); var engine = require ( 'engine' ); var audio = require ( 'audio' ); var media = require ( 'media' ); audio . setAudioReturnChannel ( 2 ); event . on ( 'speech' , function ( ev ) { if ( ev . text == 'stop' ) { engine . log ( 'Stopping playback on behalf of client ' + ev . client . nick ()); media . stop (); } else { engine . log ( ev . client . nick () + ' just said ' + ev . text ); } }); }); So it's pretty simple: you register some voiceCommands in the plugins' manifest. Once one of the registered commands is recognized, the speech event gets triggered with an object containing the clientId and the recognized command (a full client object will be added later on). Important: Only words that are inside the ./speech/dict file will be recognized. It already contains many english words and their phonetic \"translation\". If you need words that are not in there, you have to add them (and the translation) manually before you can use them. In most simple cases it works well enough, so don't try to recognize full sentences but focus on simple commands. Also, you might want to let the commands start with a word like \"bot\", so that you don't trigger things by accident ;)","title":"Speech Recognition"},{"location":"speechrecognition/#speech-recognition","text":"Speech Recognition is not very reliable and currently only works on TeamSpeak. This is a little tutorial on how to use speech recognition. The feature is still highly experimental and will cause increased CPU & RAM usage. I've tried to make it so it only activates if it is really necessary. Discuss this feature on the forums.","title":"Speech Recognition"},{"location":"speechrecognition/#requirements","text":"you need at least SinusBot version 0.13.37 you will need to provide the commands that should be recognized beforehand for now there is no continuous recognition only 3 speakers will be recognized simultaneously, additional speakers will be ignored until one of the initial 3 speakers will stop speaking; in most cases that is more than enough speech recognition will only work on licensed instances for now TS3 only","title":"Requirements"},{"location":"speechrecognition/#preparation","text":"set Enable = true in section [SpeechRecognition] of the config.ini Download https://www.sinusbot.com/pre/speech.tar.bz2 Extract that file to the same directory as your SinusBot (so you will have a new folder speech inside the SinusBot directory) Create a script that uses the speech recognition engine Restart the bot","title":"Preparation"},{"location":"speechrecognition/#code-example","text":"registerPlugin ({ name : 'Speech Recognition Demo' , version : '1.0' , description : 'This is a simple script that will stop playback when you say \"stop\"' , author : 'Michael Friese <michael@sinusbot.com>' , vars : [], voiceCommands : [ 'stop' ] }, function ( sinusbot , config ) { var event = require ( 'event' ); var engine = require ( 'engine' ); var audio = require ( 'audio' ); var media = require ( 'media' ); audio . setAudioReturnChannel ( 2 ); event . on ( 'speech' , function ( ev ) { if ( ev . text == 'stop' ) { engine . log ( 'Stopping playback on behalf of client ' + ev . client . nick ()); media . stop (); } else { engine . log ( ev . client . nick () + ' just said ' + ev . text ); } }); }); So it's pretty simple: you register some voiceCommands in the plugins' manifest. Once one of the registered commands is recognized, the speech event gets triggered with an object containing the clientId and the recognized command (a full client object will be added later on). Important: Only words that are inside the ./speech/dict file will be recognized. It already contains many english words and their phonetic \"translation\". If you need words that are not in there, you have to add them (and the translation) manually before you can use them. In most simple cases it works well enough, so don't try to recognize full sentences but focus on simple commands. Also, you might want to let the commands start with a word like \"bot\", so that you don't trigger things by accident ;)","title":"Code Example"},{"location":"tts/","text":"Text-to-Speech \ud83d\udd17 Since version 1.0, SinusBot has two options for you to use Text-to-Speech. You can either have the bot use an online service to do the speech synthesis or install some libraries from the Chromium project to generate speech on your computer/server Both come with advantages and disadvantages - using an online service will most likely generate some cost, while using your server to generate voice will consume quite some CPU power. Using an online service \ud83d\udd17 To let your bot speak via an online service, you need to register with such a service and get a valid URL (link) that the bot can use to do the actual conversion. Settings -> Instance Settings has got a field called TTS-Url where you can enter such a URL. To make this actually work, you have to replace the parameter that contains the text to __TEXT and the locale (if that can be configured via the service) to __LOCALE . If you are using the locale feature, please also provide the default locale in the appropriate field. Afterwards click Save changes . Hit Alt+S in the bot interface to run a test. If everything was successful, you should hear the bot saying what you entered after a short delay. Given you have a tts provider that handed you an URL in the form of http://a-great-tts-provider.com/doTTS?text=Test&locale=en you will have to replace the \"Test\" in the URL with __TEXT and that \"en\" with __LOCALE , so that it looks like http://a-great-tts-provider.com/doTTS?text=__TEXT&locale=__LOCALE See the [[https://forum.sinusbot.com/threads/text-to-speech-apis-for-sinusbot.500|forums]] for a list of providers known to support this kind of URLs. Installing libraries from the Chromium project \ud83d\udd17 These are basic instructions for Linux. You need at least SinusBot 1.0 for this to work. Download and install the library and the voices cd /opt/sinusbot/tts wget https://chromium.googlesource.com/chromiumos/platform/assets/+archive/master/speech_synthesis/patts.tar.gz tar -xzf patts.tar.gz rm patts.tar.gz unzip tts_service_x86_64.nexe.zip If the last command fails, you probably need to install unzip first. On Debian/Ubuntu this can be done with apt install unzip . Afterwards, edit your config.ini to contain the following: [TTS] Enabled = true [[TTS.Modules]] Locale = \"en-US\" Filename = \"voice_lstm_en-US.zvoice\" PipelineFile = \"voice_lstm_en-US/sfg/pipeline\" Prefix = \"voice_lstm_en-US/sfg/\" Instances = 2 [[TTS.Modules]] Locale = \"de-DE\" Filename = \"voice_lstm_de-DE.zvoice\" PipelineFile = \"voice_lstm_de-DE/nfh/pipeline\" Prefix = \"voice_lstm_de-DE/nfh/\" Instances = 2 You can get the proper settings for the PipelineFile and Prefix parameters from the corresponding .js files. Some voices (those that have files beginning with remote_) need to be downloaded separately first. The Instances parameter limits the number of concurrent synthesis processes - each of those consumes about 40-100 MB RAM and some CPU cycles. Locale is the locale parameter that is actually used by the bot.","title":"Text-to-Speech"},{"location":"tts/#text-to-speech","text":"Since version 1.0, SinusBot has two options for you to use Text-to-Speech. You can either have the bot use an online service to do the speech synthesis or install some libraries from the Chromium project to generate speech on your computer/server Both come with advantages and disadvantages - using an online service will most likely generate some cost, while using your server to generate voice will consume quite some CPU power.","title":"Text-to-Speech"},{"location":"tts/#using-an-online-service","text":"To let your bot speak via an online service, you need to register with such a service and get a valid URL (link) that the bot can use to do the actual conversion. Settings -> Instance Settings has got a field called TTS-Url where you can enter such a URL. To make this actually work, you have to replace the parameter that contains the text to __TEXT and the locale (if that can be configured via the service) to __LOCALE . If you are using the locale feature, please also provide the default locale in the appropriate field. Afterwards click Save changes . Hit Alt+S in the bot interface to run a test. If everything was successful, you should hear the bot saying what you entered after a short delay. Given you have a tts provider that handed you an URL in the form of http://a-great-tts-provider.com/doTTS?text=Test&locale=en you will have to replace the \"Test\" in the URL with __TEXT and that \"en\" with __LOCALE , so that it looks like http://a-great-tts-provider.com/doTTS?text=__TEXT&locale=__LOCALE See the [[https://forum.sinusbot.com/threads/text-to-speech-apis-for-sinusbot.500|forums]] for a list of providers known to support this kind of URLs.","title":"Using an online service"},{"location":"tts/#installing-libraries-from-the-chromium-project","text":"These are basic instructions for Linux. You need at least SinusBot 1.0 for this to work. Download and install the library and the voices cd /opt/sinusbot/tts wget https://chromium.googlesource.com/chromiumos/platform/assets/+archive/master/speech_synthesis/patts.tar.gz tar -xzf patts.tar.gz rm patts.tar.gz unzip tts_service_x86_64.nexe.zip If the last command fails, you probably need to install unzip first. On Debian/Ubuntu this can be done with apt install unzip . Afterwards, edit your config.ini to contain the following: [TTS] Enabled = true [[TTS.Modules]] Locale = \"en-US\" Filename = \"voice_lstm_en-US.zvoice\" PipelineFile = \"voice_lstm_en-US/sfg/pipeline\" Prefix = \"voice_lstm_en-US/sfg/\" Instances = 2 [[TTS.Modules]] Locale = \"de-DE\" Filename = \"voice_lstm_de-DE.zvoice\" PipelineFile = \"voice_lstm_de-DE/nfh/pipeline\" Prefix = \"voice_lstm_de-DE/nfh/\" Instances = 2 You can get the proper settings for the PipelineFile and Prefix parameters from the corresponding .js files. Some voices (those that have files beginning with remote_) need to be downloaded separately first. The Instances parameter limits the number of concurrent synthesis processes - each of those consumes about 40-100 MB RAM and some CPU cycles. Locale is the locale parameter that is actually used by the bot.","title":"Installing libraries from the Chromium project"},{"location":"whatsnew/","text":"What is new? \ud83d\udd17 Version 1.0 \ud83d\udd17 This entry might change until the 1.0 version has become stable. Scripting: Introducing v8 \ud83d\udd17 The scripting engine has been changed to v8 - that's the engine that also powers the Chrome browser and node.js. The change will bring many advantages such as ES6 compatibility and an increased control over the resources used by it. This comes with a couple of changes that script authors need to adapt their scripts to. More info can be found in the changelog of Alpha 1 . For users of scripts, it has been made easier to grant a script permission to use restricted modules. When previously you had to edit your config.ini to specifically allow a script to access a database or the filesystem, you can now view the required privileges of a script and accept them automatically when you activate it - just like you do with apps on your phone. Please be careful when installing scripts, especially when they want to use the restricted modules. External File Support \ud83d\udd17 With version 1.0 you can store files outside of the bot itself and have the bot \"import\" and use them on-the-fly. This means that if you already have your music collection on the server, you don't need to manually import it into the bot anymore. Or if you want to use (S)FTP to manage your files, you can use that as well. Just add or modify the ExternalFileBase in your config.ini to point to your music directory. Integrated Text-to-Speech environment \ud83d\udd17 We've integrated the Native Client functionality from the Chromium project into the bot - that means that you can use the same offline TTS engine you probably know from the Chrome browser or your Android phone. More info on that can be found here . Better support for Discord \ud83d\udd17 The Discord backend has also seen several of additions - you can for example now bind server roles to SinusBot accounts just like you can bind them to server groups on TeamSpeak.","title":"What is new?"},{"location":"whatsnew/#what-is-new","text":"","title":"What is new?"},{"location":"whatsnew/#version-10","text":"This entry might change until the 1.0 version has become stable.","title":"Version 1.0"},{"location":"whatsnew/#scripting-introducing-v8","text":"The scripting engine has been changed to v8 - that's the engine that also powers the Chrome browser and node.js. The change will bring many advantages such as ES6 compatibility and an increased control over the resources used by it. This comes with a couple of changes that script authors need to adapt their scripts to. More info can be found in the changelog of Alpha 1 . For users of scripts, it has been made easier to grant a script permission to use restricted modules. When previously you had to edit your config.ini to specifically allow a script to access a database or the filesystem, you can now view the required privileges of a script and accept them automatically when you activate it - just like you do with apps on your phone. Please be careful when installing scripts, especially when they want to use the restricted modules.","title":"Scripting: Introducing v8"},{"location":"whatsnew/#external-file-support","text":"With version 1.0 you can store files outside of the bot itself and have the bot \"import\" and use them on-the-fly. This means that if you already have your music collection on the server, you don't need to manually import it into the bot anymore. Or if you want to use (S)FTP to manage your files, you can use that as well. Just add or modify the ExternalFileBase in your config.ini to point to your music directory.","title":"External File Support"},{"location":"whatsnew/#integrated-text-to-speech-environment","text":"We've integrated the Native Client functionality from the Chromium project into the bot - that means that you can use the same offline TTS engine you probably know from the Chrome browser or your Android phone. More info on that can be found here .","title":"Integrated Text-to-Speech environment"},{"location":"whatsnew/#better-support-for-discord","text":"The Discord backend has also seen several of additions - you can for example now bind server roles to SinusBot accounts just like you can bind them to server groups on TeamSpeak.","title":"Better support for Discord"},{"location":"youtube-dl/","text":"youtube-dl \ud83d\udd17 The bot can use youtube-dl to download media files from several supported websites . Usage \ud83d\udd17 Once you have installed youtube-dl (as described below for Windows and Linux) you can use chat commands like !yt <url> , !ytdl <url> to play content from any of the supported websites , like YouTube for example. Alternatively you can also download something in your SinusBot web-interface in the \"Upload\" Page, under \"Download Files\". You can also import public playlists from YouTube . Windows \ud83d\udd17 Install the Microsoft Visual C++ 2010 Redistributable Package (x86) if it isn't installed already Download youtube-dl.exe Save it in the SinusBot directory (same folder the sinusbot.exe is in, for example in C:\\SinusBot\\ - depending on where you installed it) Restart the SinusBot (in taskbar right-click => close, then start again) The SinusBot should detect it automatically and commands like !yt , !ytdl , etc. should be available. Manual Update \ud83d\udd17 Delete the old file and download it again, as described above. Troubleshooting \ud83d\udd17 If you face an issue, make sure you have the Microsoft Visual C++ 2010 Redistributable Package (x86) installed. You should also try updating youtube-dl by re-downloading it as described above. Try downloading something in your SinusBot web-interface on the \"Upload\" page and check what it shows in the list. \"youtube-dl unavailable\" indicates that youtube-dl is not installed correctly; In that case reinstall it as shown above. For further troubleshooting see the youtube-dl Troubleshooting section for Linux . Linux \ud83d\udd17 Run the following commands but make sure to adjust the paths to match your SinusBot installation: sudo apt-get update sudo apt-get install python cd /opt/sinusbot/ curl -L -O https://yt-dl.org/downloads/latest/youtube-dl chmod a+rx youtube-dl chown sinusbot:sinusbot youtube-dl Afterwards set YoutubeDLPath = \"/opt/sinusbot/youtube-dl\" in your config.ini and restart the SinusBot. Automatic updates \ud83d\udd17 If you want youtube-dl to be updated automatically you can add a cronjob that does this by executing: echo \"0 0 * * * sinusbot /opt/sinusbot/youtube-dl -U --restrict-filenames >/dev/null\" > /etc/cron.d/ytdl Manual Update \ud83d\udd17 Either install it again, as described above, or use youtube-dl -U . su sinusbot youtube-dl -U Note: Replace youtube-dl with the correct path to your youtube-dl file (i.e. /opt/sinusbot/youtube-dl or /usr/local/bin/youtube-dl ). Troubleshooting \ud83d\udd17 Note: Adjust the paths mentioned here to fit your installation. Replace youtube-dl with the correct path to your youtube-dl file (i.e. /opt/sinusbot/youtube-dl or /usr/local/bin/youtube-dl ). Always make sure that you are using the latest version of youtube-dl ( youtube-dl --version ). You can upgrade it by running youtube-dl -U (adjust to your own path) - assuming the user you run this with has write permissions. Try downloading something in your SinusBot web-interface on the \"Upload\" page and check what it shows in the list. Try manually downloading something with youtube-dl via the command line. You can do that with youtube-dl -v -i --no-playlist --no-call-home -x <Media URL> The sinusbot usually passes the following flags: -i --no-playlist --no-call-home -J -x . youtube-dl unavailable \ud83d\udd17 The message \"youtube-dl unavailable\" indicates that youtube-dl is not installed correctly; In that case reinstall it as shown above. Make sure that the YoutubeDLPath in your config.ini is set to the correct path as described above. Common issues with outdated youtube-dl \ud83d\udd17 If your error message includes one of the following: Signature extraction failed Download Failed invalid character 'W' looking for beginning of value Try updating youtube-dl: youtube-dl -U HTTP Error 403: Forbidden \ud83d\udd17 Remove the signature cache: su sinusbot youtube-dl --rm-cache-dir and then try again. HTTP Error 429: Too Many Requests or 402: Payment Required \ud83d\udd17 These two error codes indicate that the service (for example YouTube) is blocking your IP address because of overuse. Usually this is a soft block, meaning that you can gain access again after solving a CAPTCHA. Please read the youtube-dl FAQ section for more details. While this is not a bug , you could at least try the following if you use an IPv6 address: Create the file /etc/youtube-dl.conf with the content --force-ipv4 and then try again. You can do this easily with the following command: echo \"--force-ipv4\" >> /etc/youtube-dl.conf If you still receive this error afterwards: This is neither a bug in youtube-dl nor the SinusBot. This error means that YouTube is limiting your IP-address. Unfortunately there is nothing else that you could do other than trying to use a different IP-address. Note: youtube-dl has network options such as --source-address <ip> to select the correct ip-address in case your server has more than one and --proxy <url> that you can use to route requests over another server with a http(s)/socks proxy, however we will not help you with configuring this as it has nothing to do with the SinusBot itself. Assuming --restrict-filenames since file system encoding cannot encode all characters. Set the LC_ALL environment variable to fix this. \ud83d\udd17 This is only a warning, not an error, however you can you can solve it by setting your system locale to something ending in UTF-8 . On Debian/Ubuntu you can set your locale with: dpkg-reconfigure locales Select something (use the arrow keys to navigate and Space to select/deselect items) that ends in UTF-8 , e.g. en_US.UTF-8 and confirm your selection ( Tab switches the highlighted button/field and Enter activates it). Afterwards restart your system or your SinusBot to make sure that the changes are applied.","title":"youtube-dl"},{"location":"youtube-dl/#youtube-dl","text":"The bot can use youtube-dl to download media files from several supported websites .","title":"youtube-dl"},{"location":"youtube-dl/#usage","text":"Once you have installed youtube-dl (as described below for Windows and Linux) you can use chat commands like !yt <url> , !ytdl <url> to play content from any of the supported websites , like YouTube for example. Alternatively you can also download something in your SinusBot web-interface in the \"Upload\" Page, under \"Download Files\". You can also import public playlists from YouTube .","title":"Usage"},{"location":"youtube-dl/#windows","text":"Install the Microsoft Visual C++ 2010 Redistributable Package (x86) if it isn't installed already Download youtube-dl.exe Save it in the SinusBot directory (same folder the sinusbot.exe is in, for example in C:\\SinusBot\\ - depending on where you installed it) Restart the SinusBot (in taskbar right-click => close, then start again) The SinusBot should detect it automatically and commands like !yt , !ytdl , etc. should be available.","title":"Windows"},{"location":"youtube-dl/#windows-update","text":"Delete the old file and download it again, as described above.","title":"Manual Update"},{"location":"youtube-dl/#windows-troubleshooting","text":"If you face an issue, make sure you have the Microsoft Visual C++ 2010 Redistributable Package (x86) installed. You should also try updating youtube-dl by re-downloading it as described above. Try downloading something in your SinusBot web-interface on the \"Upload\" page and check what it shows in the list. \"youtube-dl unavailable\" indicates that youtube-dl is not installed correctly; In that case reinstall it as shown above. For further troubleshooting see the youtube-dl Troubleshooting section for Linux .","title":"Troubleshooting"},{"location":"youtube-dl/#linux","text":"Run the following commands but make sure to adjust the paths to match your SinusBot installation: sudo apt-get update sudo apt-get install python cd /opt/sinusbot/ curl -L -O https://yt-dl.org/downloads/latest/youtube-dl chmod a+rx youtube-dl chown sinusbot:sinusbot youtube-dl Afterwards set YoutubeDLPath = \"/opt/sinusbot/youtube-dl\" in your config.ini and restart the SinusBot.","title":"Linux"},{"location":"youtube-dl/#automatic-updates","text":"If you want youtube-dl to be updated automatically you can add a cronjob that does this by executing: echo \"0 0 * * * sinusbot /opt/sinusbot/youtube-dl -U --restrict-filenames >/dev/null\" > /etc/cron.d/ytdl","title":"Automatic updates"},{"location":"youtube-dl/#linux-update","text":"Either install it again, as described above, or use youtube-dl -U . su sinusbot youtube-dl -U Note: Replace youtube-dl with the correct path to your youtube-dl file (i.e. /opt/sinusbot/youtube-dl or /usr/local/bin/youtube-dl ).","title":"Manual Update"},{"location":"youtube-dl/#linux-troubleshooting","text":"Note: Adjust the paths mentioned here to fit your installation. Replace youtube-dl with the correct path to your youtube-dl file (i.e. /opt/sinusbot/youtube-dl or /usr/local/bin/youtube-dl ). Always make sure that you are using the latest version of youtube-dl ( youtube-dl --version ). You can upgrade it by running youtube-dl -U (adjust to your own path) - assuming the user you run this with has write permissions. Try downloading something in your SinusBot web-interface on the \"Upload\" page and check what it shows in the list. Try manually downloading something with youtube-dl via the command line. You can do that with youtube-dl -v -i --no-playlist --no-call-home -x <Media URL> The sinusbot usually passes the following flags: -i --no-playlist --no-call-home -J -x .","title":"Troubleshooting"},{"location":"youtube-dl/#youtube-dl-unavailable","text":"The message \"youtube-dl unavailable\" indicates that youtube-dl is not installed correctly; In that case reinstall it as shown above. Make sure that the YoutubeDLPath in your config.ini is set to the correct path as described above.","title":"youtube-dl unavailable"},{"location":"youtube-dl/#outdated","text":"If your error message includes one of the following: Signature extraction failed Download Failed invalid character 'W' looking for beginning of value Try updating youtube-dl: youtube-dl -U","title":"Common outdated issues"},{"location":"youtube-dl/#error-403","text":"Remove the signature cache: su sinusbot youtube-dl --rm-cache-dir and then try again.","title":"HTTP Error 403: Forbidden"},{"location":"youtube-dl/#error-429","text":"These two error codes indicate that the service (for example YouTube) is blocking your IP address because of overuse. Usually this is a soft block, meaning that you can gain access again after solving a CAPTCHA. Please read the youtube-dl FAQ section for more details. While this is not a bug , you could at least try the following if you use an IPv6 address: Create the file /etc/youtube-dl.conf with the content --force-ipv4 and then try again. You can do this easily with the following command: echo \"--force-ipv4\" >> /etc/youtube-dl.conf If you still receive this error afterwards: This is neither a bug in youtube-dl nor the SinusBot. This error means that YouTube is limiting your IP-address. Unfortunately there is nothing else that you could do other than trying to use a different IP-address. Note: youtube-dl has network options such as --source-address <ip> to select the correct ip-address in case your server has more than one and --proxy <url> that you can use to route requests over another server with a http(s)/socks proxy, however we will not help you with configuring this as it has nothing to do with the SinusBot itself.","title":"HTTP Error 429: Too Many Requests or 402: Payment Required"},{"location":"youtube-dl/#assuming-restrict-filenames","text":"This is only a warning, not an error, however you can you can solve it by setting your system locale to something ending in UTF-8 . On Debian/Ubuntu you can set your locale with: dpkg-reconfigure locales Select something (use the arrow keys to navigate and Space to select/deselect items) that ends in UTF-8 , e.g. en_US.UTF-8 and confirm your selection ( Tab switches the highlighted button/field and Enter activates it). Afterwards restart your system or your SinusBot to make sure that the changes are applied.","title":"Assuming --restrict-filenames since file system encoding cannot encode all characters"},{"location":"faq/features/","text":"How can I playback audio from 3rd party sites? \ud83d\udd17 You can install youtube-dl to playback URLs from every source youtube-dl supports. However, there will be no support for youtube-dl related issues. Some websites don't allow downloading, so make sure you don't use the bot for those sites. How does Text-to-Speech (TTS) work? I need an URL for that! \ud83d\udd17 Search the forums for some URLs you can use with the bot. Also, see this page for more information. Can I download whole playlists from YouTube? \ud83d\udd17 Yes, you can. This requires installing youtube-dl . When creating a new playlist click \"Show advanced options\", then you have the option to enter a URL from which the playlist will be fetched. I want to integrate the bot into my website / remote control the bot via script. How can I do that? \ud83d\udd17 The API documentation of the Bot can be found here . Samples and libraries can be found in the 3rd party forums . How can guests control the bot? \ud83d\udd17 Create a bot user account in your web-interface, edit it afterwards and bind it to the server group ID -1 (this will match everyone). Then set the privileges you want the guests to have. The web-interface will however always require a login.","title":"Features"},{"location":"faq/features/#how-can-i-playback-audio-from-3rd-party-sites","text":"You can install youtube-dl to playback URLs from every source youtube-dl supports. However, there will be no support for youtube-dl related issues. Some websites don't allow downloading, so make sure you don't use the bot for those sites.","title":"Playback from 3rd party sites"},{"location":"faq/features/#tts","text":"Search the forums for some URLs you can use with the bot. Also, see this page for more information.","title":"Text-to-Speech (TTS)"},{"location":"faq/features/#download-youtube-playlists","text":"Yes, you can. This requires installing youtube-dl . When creating a new playlist click \"Show advanced options\", then you have the option to enter a URL from which the playlist will be fetched.","title":"Download YouTube Playlists"},{"location":"faq/features/#sinusbot-api-integration","text":"The API documentation of the Bot can be found here . Samples and libraries can be found in the 3rd party forums .","title":"SinusBot API Integration"},{"location":"faq/features/#how-can-guests-control-the-bot","text":"Create a bot user account in your web-interface, edit it afterwards and bind it to the server group ID -1 (this will match everyone). Then set the privileges you want the guests to have. The web-interface will however always require a login.","title":"How can guests control the bot?"},{"location":"faq/general/","text":"Can I have more than 2 instances? How do I get a license? \ud83d\udd17 Yes you can! Check out the page about Licenses for more. Where and how to get the hosting version? I want to sell the bot! \ud83d\udd17 The SinusBot software is free for personal use only. If you want to use it commercially, please contact the author. The hosting version is not publicly available . If you are interested in hosting a huge amount of bots (I'm talking 200+ here), feel free to contact @flyth on the forums. The hosting version will not become generally available to everyone anytime soon. Please refrain from messages like \"I'm thinking of starting a business...\", \"I want to sell the bot, but my website is not yet ready\" or such and come back, if you seriously want to apply as a hosting partner and have the proper audience for that. :) There are no licenses for sponsored hosting, yet. However, here are some basic facts of that version: It's capable of running many customer-separated instances on one host (I've seen around 180 on a mediocre server - ~2.x GHz Xeon / 8 Cores, 32G RAM - without any load-saving features enabled - with those features enabled, many more instances would be supported). A provisioning API is available for creating & managing customer instances. There are also some protective features in place that prevent misuse of several client-features (banner spamming and such). Automatic logins can be created from other webinterfaces and the whole frontend API is open, well documented and accessible for further customization / integration. If you're a serious hosting company and want to do some stress testing, please contact me to get a demo-license that will help you do so. Is sponsoring allowed? \ud83d\udd17 Sponsoring the SinusBot is currently not allowed without prior written permission of the author. Private use (non-commercial and neither profiting directly nor indirectly in any way) such as sharing with your friends is fine of course. Where can I find the version of my SinusBot? \ud83d\udd17 If the bot is already running, open up the web interface and go to Settings > Info > About . If the bot is not running, you can start it with ./sinusbot -v on your command line and it will display the version information there. My bot eats a lot of RAM. Why? \ud83d\udd17 The sinusbot itself doesn't use lots of memory but reserves a fair amount. However, this doesn't count as used, so you don't need to worry about it. More details about memory usage on Linux can be found here . The actual TeamSpeak Client instances require more RAM, from which a big part is shared between multiple instances - so again: you probably don't need to worry about it. If you TeamSpeak Server has an big/animated server banner than that will significantly increase RAM usage. Can I control the bot via TS chat commands? \ud83d\udd17 Yes, that's possible. The bot knows about several privileges that a user must have to do several kinds of actions. To make the bot recognize a TS user as a bot user, you can bind a TS account to a bot account on the Edit user page. All available commands are listed at Settings -> Info -> Commands - including the required privileges to run them. Recent SinusBot versions also have a !help command. What's the maximum length/size of music files? \ud83d\udd17 Uploaded files can be limited through the UploadLimit-option in your config.ini (see Configuration ). Also note that reverse-proxies can limit the file size too. Does the bot run on Raspberry PI / PI 2 or similar ARM based systems? \ud83d\udd17 No - there's no ARM based TS client available, so it makes little sense to port the bot. How can I add scripts? \ud83d\udd17 Download the script you want and copy it to the scripts-folder of the bot. Restart the bot and see the settings -> scripts page to activate it. Where are my music files stored? Can I upload files via FTP? \ud83d\udd17 When you upload files to the bot, they will be analyzed, indexed and stored in the data-directory of the bot. This ensures consistency, fast access and independent metadata as well as some other features like deduplication. If you want to use FTP to manage your files, you can use the ExternalFileBase setting in your config.ini to point to a directory where the files are stored. The bot will pick them up automatically. Will there be a macOS Version? \ud83d\udd17 Probably not directly, sorry. As a workaround you can currently use the Docker image , but that requires knowledge of Docker and the command line. Why are you guys so rude? \ud83d\udd17 It sounds like you got an answer you didn't like or think we haven't treated you the way you expect us to. Usually the staff and the community is really nice. We usually answer to whatever questions you have and we are very patient - even if you're a newbie. Still, people answer in their spare time and get asked some questions over and over again, even if they have been answered well in the FAQ or on the forums in general. That really gets annoying fast. And because you just didn't search the FAQ or forums before asking on the chat or in a new thread, or posted a thread in caps only (and maybe with the words \"FAST!\", \"ASAP!\" or such), you're basically saying that you think your time is worth more than the time of the people you ask. And that is way more rude than just a short unfriendly answer. So please keep that in mind. If you are such a user: next time, use the search functionality before you ask something. Read the \"READ ME BEFORE YOU POST\" threads (yes, they're in caps for that reason!) as well. If you did some research before asking, please tell people that / what you did. If people are still being rude, there have probably been other users just before you asked your question, who didn't do research before. So please be a little patient in such cases and ask kindly again. Last but not least: the users of this forum speak many different languages, many of them are not native English or German speakers. Politeness can get lost in translation really fast as can messages be interpreted as \"rude\" even if they're not meant to be. Calm down and try to do your best in understanding each other in such cases :) Support Policy / Support Grundregeln \ud83d\udd17 English In the past we got tons of support requests in case of the user is using an old and no longer supported version ( How to check my Bot Version? ) of our software. We don't want this any more... So of course we need some rules! Make sure you use an up to date version of: Linux (Ubuntu 18.04+, Debian 9+, CentOS 7+ or better) Windows (10, Server 2012 or better), with all latest Updates / Service Packs Make sure you have the latest SinusBot version Make sure you use a valid license for Teamspeak / a valid hosting provider with legal licenses. We want to support more operating systems, but we can't test everything so if you wan't to try the bot on an not-listed platform you can try it. But you should have the knowledge of the platform! We respect Teamspeak, so we will not support invalid or illegal servers no matter what areas. Before posting: READ THIS FIRST . Thanks! Every topic and private message which is violating this rule will be ignored/deleted. Deutsch In der Vergangenheit haben wir massenhaft Support-Anfragen erhalten, wenn der Benutzer eine alte oder nicht mehr unterst\u00fctzte Version unserer Software verwendet ( Wie kann ich meine Bot Version pr\u00fcfen? ). Wir wollen das nicht mehr ... Daher brauchen wir Regeln! Stelle sicher, dass du eine aktuelle Betriebssystem Version verwendest: Linux (Ubuntu 18.04+, Debian 9+, CentOS 7+ oder besser) Windows (10, Server 2012 oder besser), mit allen Updates / Service Packs Stelle sicher, dass du die aktuellste SinusBot Version hast Stelle sicher das du eine g\u00fcltige Teamspeak Lizenz verwendest, bzw dein Teamspeak Hoster sich an die Teamspeak Richtlinien h\u00e4lt. Wir wollen mehr Betriebssysteme unterst\u00fctzen, aber wir k\u00f6nnen nicht alles testen, wenn man den bot auf einer nicht- gelisteten Plattform ausprobieren m\u00f6chte kann man das tun. Doch du solltest das Wissen \u00fcber die Plattform haben! Wir Respektieren Teamspeak, daher werden wir ung\u00fcltige oder Illegale Server nicht Supporten egal in welchen bereichen. Befor du etwas postest: LIES MICH . Danke! Jedes Thema und jede private Nachricht, die gegen diese Regel verst\u00f6\u00dft, wird ignoriert/gel\u00f6scht.","title":"General"},{"location":"faq/general/#more-instances","text":"Yes you can! Check out the page about Licenses for more.","title":"More Instances?"},{"location":"faq/general/#commercial-use","text":"The SinusBot software is free for personal use only. If you want to use it commercially, please contact the author. The hosting version is not publicly available . If you are interested in hosting a huge amount of bots (I'm talking 200+ here), feel free to contact @flyth on the forums. The hosting version will not become generally available to everyone anytime soon. Please refrain from messages like \"I'm thinking of starting a business...\", \"I want to sell the bot, but my website is not yet ready\" or such and come back, if you seriously want to apply as a hosting partner and have the proper audience for that. :) There are no licenses for sponsored hosting, yet. However, here are some basic facts of that version: It's capable of running many customer-separated instances on one host (I've seen around 180 on a mediocre server - ~2.x GHz Xeon / 8 Cores, 32G RAM - without any load-saving features enabled - with those features enabled, many more instances would be supported). A provisioning API is available for creating & managing customer instances. There are also some protective features in place that prevent misuse of several client-features (banner spamming and such). Automatic logins can be created from other webinterfaces and the whole frontend API is open, well documented and accessible for further customization / integration. If you're a serious hosting company and want to do some stress testing, please contact me to get a demo-license that will help you do so.","title":"Commercial Use?"},{"location":"faq/general/#sponsoring","text":"Sponsoring the SinusBot is currently not allowed without prior written permission of the author. Private use (non-commercial and neither profiting directly nor indirectly in any way) such as sharing with your friends is fine of course.","title":"Is sponsoring allowed?"},{"location":"faq/general/#what-is-my-version","text":"If the bot is already running, open up the web interface and go to Settings > Info > About . If the bot is not running, you can start it with ./sinusbot -v on your command line and it will display the version information there.","title":"Where can I find the version of my SinusBot?"},{"location":"faq/general/#high-ram-usage","text":"The sinusbot itself doesn't use lots of memory but reserves a fair amount. However, this doesn't count as used, so you don't need to worry about it. More details about memory usage on Linux can be found here . The actual TeamSpeak Client instances require more RAM, from which a big part is shared between multiple instances - so again: you probably don't need to worry about it. If you TeamSpeak Server has an big/animated server banner than that will significantly increase RAM usage.","title":"High RAM Usage?"},{"location":"faq/general/#chat-commands","text":"Yes, that's possible. The bot knows about several privileges that a user must have to do several kinds of actions. To make the bot recognize a TS user as a bot user, you can bind a TS account to a bot account on the Edit user page. All available commands are listed at Settings -> Info -> Commands - including the required privileges to run them. Recent SinusBot versions also have a !help command.","title":"Chat Commands?"},{"location":"faq/general/#max-file-size","text":"Uploaded files can be limited through the UploadLimit-option in your config.ini (see Configuration ). Also note that reverse-proxies can limit the file size too.","title":"Max. file size?"},{"location":"faq/general/#arm","text":"No - there's no ARM based TS client available, so it makes little sense to port the bot.","title":"Raspberry PI/ARM Support?"},{"location":"faq/general/#how-can-i-add-scripts","text":"Download the script you want and copy it to the scripts-folder of the bot. Restart the bot and see the settings -> scripts page to activate it.","title":"How can I add scripts?"},{"location":"faq/general/#where-are-music-files-stored","text":"When you upload files to the bot, they will be analyzed, indexed and stored in the data-directory of the bot. This ensures consistency, fast access and independent metadata as well as some other features like deduplication. If you want to use FTP to manage your files, you can use the ExternalFileBase setting in your config.ini to point to a directory where the files are stored. The bot will pick them up automatically.","title":"Where are music files stored?"},{"location":"faq/general/#macos","text":"Probably not directly, sorry. As a workaround you can currently use the Docker image , but that requires knowledge of Docker and the command line.","title":"macOS Support?"},{"location":"faq/general/#why-are-you-guys-so-rude","text":"It sounds like you got an answer you didn't like or think we haven't treated you the way you expect us to. Usually the staff and the community is really nice. We usually answer to whatever questions you have and we are very patient - even if you're a newbie. Still, people answer in their spare time and get asked some questions over and over again, even if they have been answered well in the FAQ or on the forums in general. That really gets annoying fast. And because you just didn't search the FAQ or forums before asking on the chat or in a new thread, or posted a thread in caps only (and maybe with the words \"FAST!\", \"ASAP!\" or such), you're basically saying that you think your time is worth more than the time of the people you ask. And that is way more rude than just a short unfriendly answer. So please keep that in mind. If you are such a user: next time, use the search functionality before you ask something. Read the \"READ ME BEFORE YOU POST\" threads (yes, they're in caps for that reason!) as well. If you did some research before asking, please tell people that / what you did. If people are still being rude, there have probably been other users just before you asked your question, who didn't do research before. So please be a little patient in such cases and ask kindly again. Last but not least: the users of this forum speak many different languages, many of them are not native English or German speakers. Politeness can get lost in translation really fast as can messages be interpreted as \"rude\" even if they're not meant to be. Calm down and try to do your best in understanding each other in such cases :)","title":"Why are you guys so rude?"},{"location":"faq/general/#support-policy","text":"English In the past we got tons of support requests in case of the user is using an old and no longer supported version ( How to check my Bot Version? ) of our software. We don't want this any more... So of course we need some rules! Make sure you use an up to date version of: Linux (Ubuntu 18.04+, Debian 9+, CentOS 7+ or better) Windows (10, Server 2012 or better), with all latest Updates / Service Packs Make sure you have the latest SinusBot version Make sure you use a valid license for Teamspeak / a valid hosting provider with legal licenses. We want to support more operating systems, but we can't test everything so if you wan't to try the bot on an not-listed platform you can try it. But you should have the knowledge of the platform! We respect Teamspeak, so we will not support invalid or illegal servers no matter what areas. Before posting: READ THIS FIRST . Thanks! Every topic and private message which is violating this rule will be ignored/deleted. Deutsch In der Vergangenheit haben wir massenhaft Support-Anfragen erhalten, wenn der Benutzer eine alte oder nicht mehr unterst\u00fctzte Version unserer Software verwendet ( Wie kann ich meine Bot Version pr\u00fcfen? ). Wir wollen das nicht mehr ... Daher brauchen wir Regeln! Stelle sicher, dass du eine aktuelle Betriebssystem Version verwendest: Linux (Ubuntu 18.04+, Debian 9+, CentOS 7+ oder besser) Windows (10, Server 2012 oder besser), mit allen Updates / Service Packs Stelle sicher, dass du die aktuellste SinusBot Version hast Stelle sicher das du eine g\u00fcltige Teamspeak Lizenz verwendest, bzw dein Teamspeak Hoster sich an die Teamspeak Richtlinien h\u00e4lt. Wir wollen mehr Betriebssysteme unterst\u00fctzen, aber wir k\u00f6nnen nicht alles testen, wenn man den bot auf einer nicht- gelisteten Plattform ausprobieren m\u00f6chte kann man das tun. Doch du solltest das Wissen \u00fcber die Plattform haben! Wir Respektieren Teamspeak, daher werden wir ung\u00fcltige oder Illegale Server nicht Supporten egal in welchen bereichen. Befor du etwas postest: LIES MICH . Danke! Jedes Thema und jede private Nachricht, die gegen diese Regel verst\u00f6\u00dft, wird ignoriert/gel\u00f6scht.","title":"Support Policy"},{"location":"faq/installation/","text":"When will feature X be implemented? \ud83d\udd17 There will be no ETA (estimated time of arrival) on any feature. It\u2019s done when it\u2019s done, please don\u2019t ask. What is the default username and password? \ud83d\udd17 The default username is admin . Windows Double click the SinusBot logo in the tray (next to your clock at the bottom right of the screen) to login. If you need credentials to login from another system, edit the user account or create a new one and set a new password. Linux The bot will initially have a randomly generated password which is displayed on first run in the console. The sinusbot installer will also print the password at the end of the installation. Unexperienced users should use the sinusbot-installer script to reset the password. More experienced users can temprorarily override the password and change it by folling these steps: Stop the sinusbot (ie. systemctl stop sinusbot ) Start the sinusbot with the --override-password=newpassword flag as the sinusbot user: login as the sinusbot user: su sinusbot go to the sinusbot directory: cd /opt/sinusbot start the sinusbot: ./sinusbot --override-password=newpassword ( don't do this as root!) Login as admin with the specified password (ie. newpassword ) and change your password to a new one. Stop the sinusbot: Ctrl + C Afterwards restart the sinusbot without the --override-password parameter. (ie. systemctl start sinusbot ) If the sinusbot doesn't start afterwards and you get something like Job for sinusbot.service failed because the control process exited with error code. See \"systemctl status sinusbot.service\" and \"journalctl -xe\" for details. then you did something wrong, such as: starting the bot as root or not stopping the bot, ... Look at the sinusbot log (as it says) with journalctl -xe and search for a solution on this FAQ page or in the forum. What Ports and IP Ranges are used? \ud83d\udd17 The SinusBot requires an internet connection and contacts our update servers on each start. As the update servers make use of use cloudflare, access to cloudflares IP ranges is required. The TeamSpeak 3 client makes outgoing connections to the TeamSpeak server that you configure. The default ports are listed here (ie. 9987 (UDP) , 30033 (TCP) , ...). Finally, the SinusBot webinterface listens for incoming HTTP requests on port 8087 (TCP) by default. The address and port can be changed in the config by setting ListenHost and ListenPort . Make sure to allow incoming TCP requests to this port in your firewall. Is there a version for 32bit Windows / Linux? \ud83d\udd17 No, there isn\u2019t and there probably won't be one as that would mean much more maintenance work for not that many users. I get some message like \"ELF: not found\" on Linux when trying to start the bot. WTF? \ud83d\udd17 You are trying to run the bot on a 32bit OS. Upgrade your system to 64bit to make the bot work (see above: there is no 32bit version ). Do you support CentOS, Fedora, (name your distro)\u2026? \ud83d\udd17 Probably. I\u2019ve heard of people running the bot on ArchLinux, CentOS, Fedora and others. Rule of thumb is: if the TS3 Client can run there, the bot usually can as well. However, these distributions have not been officially tested and there\u2019s no documentation available. We provide documentation and support for the latest LTS releases of Debian and Ubuntu. When trying to download the bot, I get errors about SSL. Why and how to fix that? \ud83d\udd17 The whole website now runs on SSL which is far more secure when it comes to software you want to install on your server. However, some linux distributions only have outdated root certificates and those of cloudflare are missing. You can try to upate them via sudo update-ca-certificates on debian/ubuntu. Otherwise, you can try to use curl -O https://... When I start the bot from the webinterface, it doesn\u2019t work. It says something about \u201cTSClient quit.\u201d in the log \ud83d\udd17 This can have many reasons. It means that the TeamSpeak client is unable to run or connect to the destination server. You either have not enough free memory, dependencies for the client are missing, or or or. Please search the forum and post your problem along with the log if you cannot find an issue similar to yours. Here's a quick checklist: does your server have enough RAM? (at least 300 MB are recommended) did you follow the installation guide thoroughly and installed all required dependencies? do you run the bot on an officially supported OS? Windows, Debian, Ubuntu are officially supported. did you try setting the locale manually like it says in the \"Troubleshooting\" section of the installation guide? did you copy the plugin like it says in the documentation? make sure the server ip/adress is correct make sure your client is up to date since older versions might be blocked make sure the security level is lower or equal to the clients identity level My bot stutters / lags a lot on Windows. What can I do? \ud83d\udd17 Increase the bots\u2019 priority and also that of the client instances it uses. You can do that within the task manager. You can also try to decrease the setting SampleInterval, adjusting it to SampleInterval = 40 in your config.ini. Someone told me to fix the file permissions. How do I do that? \ud83d\udd17 Given your bot has been installed in /opt/sinusbot and you've added a user sinusbot with the group sinusbot as well, run the following command with root permissions: chown -R sinusbot:sinusbot /opt/sinusbot I get an error like \"what(): locale::facet::_S_create_c_locale name not valid\". What do I do? \ud83d\udd17 Example Error: terminate called after throwing an instance of 'std::runtime_error' what(): locale::facet::_S_create_c_locale name not valid On some minimal installs of Debian or other distributions, the locales are not completely installed / built. This error can be corrected as follow ( run as root ): Debian: apt-get install locales dpkg-reconfigure locales Ubuntu: apt-get install locales locale-gen en_US.UTF-8 update-locale LANG=en_US.UTF-8 reboot I get an error when starting: Updating database to v7... 6 / Error on database operations: there is already another table or index with this name: \ud83d\udd17 This is a bug in the database upgrade process which happens when you upgrade from <= 0.9.9 to a newer version, go back to <= 0.9.9 and then try to upgrade again (or more likely: when starting the bot via ./ts3bot, even when the newer version ./sinusbot is installed). To get around this, please carefully do the following: stop the bot process completely edit your config.ini and add Pragma = 7 at the top start the bot and wait 2-3 minutes shut down the bot again remove that Pragma entry (this is really important) start the bot normally That should fix it. On Windows I get the following error: Error spawning instancefork/exec... WTF? \ud83d\udd17 Most people who see this error have the compatibility mode enabled for either the bot or the TS3 client. Please disable the compatibility mode and try again. Could not open /tmp/.sinusbot.lock. Is SinusBot already running? \ud83d\udd17 Remove the file with rm /tmp/.sinusbot.lock and make sure not to run the bot as root. Why can't I run the bot as root? \ud83d\udd17 Unnecessarily running software with the root user is a potential security risk and is generally considered bad practice. You should always run any program with the least amount of permissions required. So how can I run the bot then? Start the bot with another user or use a startscipt to run the bot. You'll have to change the ownership of the entire folder to the new user. What does \"a manual update is required\" mean? \ud83d\udd17 This error message appears when the time of your server is not accurate. To fix this issue set the correct time and configure ntp to keep it synced properly. This might also be caused by old SinusBot versions. Update your SinusBot if necessary. What does \"could not contact update server\" mean? \ud83d\udd17 This error message appears when the SinusBot is unable to contact our update servers. Possible causes: no internet connection or invalid network/dns-resolver configuration cloudflare is showing a captcha page because your IP is marked as shady your IP is blacklisted due to suspected non-private use You are only allowed to run one SinusBot and commercial/non-private use is not allowed without prior, written consent by the author. If you need more instances then get a license . In case you think there was a mistake or you want to ask for a second chance, post in our forum or discord server and include the following information: your servers IP address output of the curl and dig commands below Please be polite, explain the situation in detail and provide your IP address! There is no point in lying, if you are not honest then we are not interested in talking to you. Please check curl -v --no-keepalive --http1.1 https://update01.sinusbot.com . If it returns a 404 ( < HTTP/1.1 404 Not Found ) then cloudflare should not be the issue. If it returns a 403 ( < HTTP/1.1 403 ) and HTML code with a captcha then cloudflare requires you to solve the captcha because your IP address is not trusted. Before you ask: No, we can't whitelist your IP from cloudflare. To check DNS, use dig A +short update01.sinusbot.com . It should return something in the cloudflare ranges .","title":"Installation"},{"location":"faq/installation/#when-will-feature-x-be-implemented","text":"There will be no ETA (estimated time of arrival) on any feature. It\u2019s done when it\u2019s done, please don\u2019t ask.","title":"When will feature X be implemented?"},{"location":"faq/installation/#what-is-the-default-username-and-password","text":"The default username is admin . Windows Double click the SinusBot logo in the tray (next to your clock at the bottom right of the screen) to login. If you need credentials to login from another system, edit the user account or create a new one and set a new password. Linux The bot will initially have a randomly generated password which is displayed on first run in the console. The sinusbot installer will also print the password at the end of the installation. Unexperienced users should use the sinusbot-installer script to reset the password. More experienced users can temprorarily override the password and change it by folling these steps: Stop the sinusbot (ie. systemctl stop sinusbot ) Start the sinusbot with the --override-password=newpassword flag as the sinusbot user: login as the sinusbot user: su sinusbot go to the sinusbot directory: cd /opt/sinusbot start the sinusbot: ./sinusbot --override-password=newpassword ( don't do this as root!) Login as admin with the specified password (ie. newpassword ) and change your password to a new one. Stop the sinusbot: Ctrl + C Afterwards restart the sinusbot without the --override-password parameter. (ie. systemctl start sinusbot ) If the sinusbot doesn't start afterwards and you get something like Job for sinusbot.service failed because the control process exited with error code. See \"systemctl status sinusbot.service\" and \"journalctl -xe\" for details. then you did something wrong, such as: starting the bot as root or not stopping the bot, ... Look at the sinusbot log (as it says) with journalctl -xe and search for a solution on this FAQ page or in the forum.","title":"What is the default username and password?"},{"location":"faq/installation/#ports-and-ips","text":"The SinusBot requires an internet connection and contacts our update servers on each start. As the update servers make use of use cloudflare, access to cloudflares IP ranges is required. The TeamSpeak 3 client makes outgoing connections to the TeamSpeak server that you configure. The default ports are listed here (ie. 9987 (UDP) , 30033 (TCP) , ...). Finally, the SinusBot webinterface listens for incoming HTTP requests on port 8087 (TCP) by default. The address and port can be changed in the config by setting ListenHost and ListenPort . Make sure to allow incoming TCP requests to this port in your firewall.","title":"Ports and IP Ranges"},{"location":"faq/installation/#32bit","text":"No, there isn\u2019t and there probably won't be one as that would mean much more maintenance work for not that many users.","title":"Is there a 32bit version?"},{"location":"faq/installation/#elf-not-found","text":"You are trying to run the bot on a 32bit OS. Upgrade your system to 64bit to make the bot work (see above: there is no 32bit version ).","title":"Error: ELF: not found"},{"location":"faq/installation/#distro-support","text":"Probably. I\u2019ve heard of people running the bot on ArchLinux, CentOS, Fedora and others. Rule of thumb is: if the TS3 Client can run there, the bot usually can as well. However, these distributions have not been officially tested and there\u2019s no documentation available. We provide documentation and support for the latest LTS releases of Debian and Ubuntu.","title":"Supported Distros"},{"location":"faq/installation/#ssl-errors-on-download","text":"The whole website now runs on SSL which is far more secure when it comes to software you want to install on your server. However, some linux distributions only have outdated root certificates and those of cloudflare are missing. You can try to upate them via sudo update-ca-certificates on debian/ubuntu. Otherwise, you can try to use curl -O https://...","title":"SSL errors on download"},{"location":"faq/installation/#ts-client-quit","text":"This can have many reasons. It means that the TeamSpeak client is unable to run or connect to the destination server. You either have not enough free memory, dependencies for the client are missing, or or or. Please search the forum and post your problem along with the log if you cannot find an issue similar to yours. Here's a quick checklist: does your server have enough RAM? (at least 300 MB are recommended) did you follow the installation guide thoroughly and installed all required dependencies? do you run the bot on an officially supported OS? Windows, Debian, Ubuntu are officially supported. did you try setting the locale manually like it says in the \"Troubleshooting\" section of the installation guide? did you copy the plugin like it says in the documentation? make sure the server ip/adress is correct make sure your client is up to date since older versions might be blocked make sure the security level is lower or equal to the clients identity level","title":"Error: TSClient quit."},{"location":"faq/installation/#lags-on-windows","text":"Increase the bots\u2019 priority and also that of the client instances it uses. You can do that within the task manager. You can also try to decrease the setting SampleInterval, adjusting it to SampleInterval = 40 in your config.ini.","title":"Lags on Windows"},{"location":"faq/installation/#fix-file-permissions","text":"Given your bot has been installed in /opt/sinusbot and you've added a user sinusbot with the group sinusbot as well, run the following command with root permissions: chown -R sinusbot:sinusbot /opt/sinusbot","title":"Fix File Permissions"},{"location":"faq/installation/#missing-locales","text":"Example Error: terminate called after throwing an instance of 'std::runtime_error' what(): locale::facet::_S_create_c_locale name not valid On some minimal installs of Debian or other distributions, the locales are not completely installed / built. This error can be corrected as follow ( run as root ): Debian: apt-get install locales dpkg-reconfigure locales Ubuntu: apt-get install locales locale-gen en_US.UTF-8 update-locale LANG=en_US.UTF-8 reboot","title":"Error: c locale name not valid"},{"location":"faq/installation/#database-errors","text":"This is a bug in the database upgrade process which happens when you upgrade from <= 0.9.9 to a newer version, go back to <= 0.9.9 and then try to upgrade again (or more likely: when starting the bot via ./ts3bot, even when the newer version ./sinusbot is installed). To get around this, please carefully do the following: stop the bot process completely edit your config.ini and add Pragma = 7 at the top start the bot and wait 2-3 minutes shut down the bot again remove that Pragma entry (this is really important) start the bot normally That should fix it.","title":"Error on database operations"},{"location":"faq/installation/#error-spawning-instancefork-exec","text":"Most people who see this error have the compatibility mode enabled for either the bot or the TS3 client. Please disable the compatibility mode and try again.","title":"Error spawning instancefork/exec"},{"location":"faq/installation/#could-not-open-tmpsinusbotlock-is-sinusbot-already-running","text":"Remove the file with rm /tmp/.sinusbot.lock and make sure not to run the bot as root.","title":"Could not open /tmp/.sinusbot.lock. Is SinusBot already running?"},{"location":"faq/installation/#why-cant-i-run-the-bot-as-root","text":"Unnecessarily running software with the root user is a potential security risk and is generally considered bad practice. You should always run any program with the least amount of permissions required. So how can I run the bot then? Start the bot with another user or use a startscipt to run the bot. You'll have to change the ownership of the entire folder to the new user.","title":"Why can't I run the bot as root?"},{"location":"faq/installation/#what-does-a-manual-update-is-required-mean","text":"This error message appears when the time of your server is not accurate. To fix this issue set the correct time and configure ntp to keep it synced properly. This might also be caused by old SinusBot versions. Update your SinusBot if necessary.","title":"What does \"a manual update is required\" mean?"},{"location":"faq/installation/#what-does-could-not-contact-update-server-mean","text":"This error message appears when the SinusBot is unable to contact our update servers. Possible causes: no internet connection or invalid network/dns-resolver configuration cloudflare is showing a captcha page because your IP is marked as shady your IP is blacklisted due to suspected non-private use You are only allowed to run one SinusBot and commercial/non-private use is not allowed without prior, written consent by the author. If you need more instances then get a license . In case you think there was a mistake or you want to ask for a second chance, post in our forum or discord server and include the following information: your servers IP address output of the curl and dig commands below Please be polite, explain the situation in detail and provide your IP address! There is no point in lying, if you are not honest then we are not interested in talking to you. Please check curl -v --no-keepalive --http1.1 https://update01.sinusbot.com . If it returns a 404 ( < HTTP/1.1 404 Not Found ) then cloudflare should not be the issue. If it returns a 403 ( < HTTP/1.1 403 ) and HTML code with a captcha then cloudflare requires you to solve the captcha because your IP address is not trusted. Before you ask: No, we can't whitelist your IP from cloudflare. To check DNS, use dig A +short update01.sinusbot.com . It should return something in the cloudflare ranges .","title":"What does \"could not contact update server\" mean?"},{"location":"installation/discord/","text":"Create a new Application at the Discord Developer Portal . Go to \"Bot\" at the sidebar and click on \"Add Bot\". In the section \"token\" click on \"copy\" to copy the token. Paste the token with Ctrl + V into the sinusbot-instance-creation form. (Optional: Add the bot to your discord-server by creating a OAuth2-link by visiting the page \"OAuth2\" in the Discord-Developers-sidebar and selecting scope \"bot\". Open then the provided URL in your browser.)","title":"Discord"},{"location":"installation/docker/","text":"Detailed instructions on how to install the sinusbot on docker can be found on the GitHub Page . You can also check out the image directly on Docker Hub . docker run -d -p 8087 :8087 \\ -v scripts:/opt/sinusbot/scripts \\ -v data:/opt/sinusbot/data \\ --name sinusbot sinusbot/docker","title":"Docker"},{"location":"installation/increase-security-level/","text":"How to increase TeamSpeak security level \ud83d\udd17 Open your SinusBot web-interface and go to: Settings \u21d2 Instance Settings Click in the text filed labeled \"Identity\", Select All Ctrl + A , Copy Ctrl + C Open a text editor such as notepad and insert the following: [Identity] id = SinusBot Identity identity = \"<IDENTITY_STRING>\" nickname = SinusBot phonetic_nickname = Replace <IDENTITY_STRING> with the identity string you copied (ends with an = ). Save the file as sinusbot_identity.ini Ctrl + S (select \"All Files\") on your desktop and close the editor. Start your TeamSpeak client and open the \"Identities\" menu Ctrl + I Right-click in the \"Local Identities\" field and select \"Import\". Select the previously created file sinusbot_identity.ini . Click on \"Go Advanced\" if you are still in the \"Basic\" mode. Click on \"Improve\", then enter your \"Requested Security Level\" and click on \"Start\". When finished click \"Close\" and then right-click in the SinusBot Identity and select \"Export\". Overwrite the previously created file sinusbot_identity.ini . Open the file again and copy the new identity string (ends with an = ). Stop your SinusBot instance (the button at the top should be orange/red). Delete the old identity string Ctrl + A Del and insert the new one Ctrl + V . Now click on \"Save changes\" to apply your changes. If you followed these steps correctly the new security level will appear. Now you can start your SinusBot instance again.","title":"Increase TS Security Level"},{"location":"installation/increase-security-level/#how-to-increase-teamspeak-security-level","text":"Open your SinusBot web-interface and go to: Settings \u21d2 Instance Settings Click in the text filed labeled \"Identity\", Select All Ctrl + A , Copy Ctrl + C Open a text editor such as notepad and insert the following: [Identity] id = SinusBot Identity identity = \"<IDENTITY_STRING>\" nickname = SinusBot phonetic_nickname = Replace <IDENTITY_STRING> with the identity string you copied (ends with an = ). Save the file as sinusbot_identity.ini Ctrl + S (select \"All Files\") on your desktop and close the editor. Start your TeamSpeak client and open the \"Identities\" menu Ctrl + I Right-click in the \"Local Identities\" field and select \"Import\". Select the previously created file sinusbot_identity.ini . Click on \"Go Advanced\" if you are still in the \"Basic\" mode. Click on \"Improve\", then enter your \"Requested Security Level\" and click on \"Start\". When finished click \"Close\" and then right-click in the SinusBot Identity and select \"Export\". Overwrite the previously created file sinusbot_identity.ini . Open the file again and copy the new identity string (ends with an = ). Stop your SinusBot instance (the button at the top should be orange/red). Delete the old identity string Ctrl + A Del and insert the new one Ctrl + V . Now click on \"Save changes\" to apply your changes. If you followed these steps correctly the new security level will appear. Now you can start your SinusBot instance again.","title":"How to increase TeamSpeak security level"},{"location":"installation/linux/","text":"Requirements \ud83d\udd17 The TeamSpeak Client 3.3+ requires at least a Linux Kernel of version 3.17 or higher! You can check your Linux Kernel version with uname -a . Make sure that your OS (Operating System) is up-to-date. We recommend recent LTS releases such as Ubuntu 20.04 or Debian 10 (buster), minimal required versions: Debian 9+ Ubuntu 18.04+ CentOS 7+ Note: While it might be possible to use older versions in particular cases, we can only provide support for the above mentioned ones. When choosing a VPS (virtual private server), make sure that it is not based on OpenVZ, because the Linux kernel will be too old. Instead choose a KVM or LCX based VPS with a recent OS. The server should have at least 512MB or 1GB of free RAM. Although the SinusBot itself doesn't require much RAM, the TeamSpeak Client(s) often take up the most memory. Make sure that the server has enough free disk space to fit your needs. Compatible Versions \ud83d\udd17 SinusBot Version TS3 Client Version Linux Kernel Version TeamSpeak Server Version 1.0.0-beta3 and later 3.3+ 3.17+ >= 3.8.x 1.0.0-beta2, 1.0.0-beta1 3.2.5 2.6+ <= 3.9.x Please note that we do not support old beta releases. See Support Policy / Support Grundregeln . Installer Script \ud83d\udd17 If you are new to Linux and/or wish to have everything installed for you in a more convenient way, we encourage you to use the Installer Script . Manual installation \ud83d\udd17 The TeamSpeak Client 3.3+ requires at least a Linux Kernel of version 3.17 or higher! You can check your Linux Kernel version with uname -a . Let's start by installing several dependencies: apt-get update apt-get install -y x11vnc xvfb libxcursor1 ca-certificates curl bzip2 libnss3 libegl1-mesa x11-xkb-utils libasound2 libpci3 libxslt1.1 libxkbcommon0 libxss1 libxcomposite1 update-ca-certificates On Debian and some Ubuntu versions you might as well have to install, so at least try: apt-get install libglib2.0-0 In case of Ubuntu 18.04 : Depending on the Ubuntu installation the universe repository of Ubuntu is not activated, resulting in missing packages for required dependencies x11vnc and xvfb . When said problem occurs, enable the universe repository by using following command: add-apt-repository universe apt-get update After all required dependencies are installed, let's assume that you're going to install the bot to /opt/sinusbot and are using the user sinusbot with the group sinusbot . We will install the bot with root then switch to this user account when running the bot. You will need to create an new user sinusbot on your server, so to do so type the following command. adduser --disabled-login sinusbot This created user is used to start the bot with usual user privileges (which is highly recommended!), as the bot should not run as root for security-reasons. Next we will create and prepare the folder where Sinusbot will be installed to, by issuing following commands as the root user: # create folder mkdir -p /opt/sinusbot # grant sinusbot user permissions on specified folder chown -R sinusbot:sinusbot /opt/sinusbot (If you're using another user/group than \"sinusbot\", replace sinusbot:sinusbot with yourusername:yourusergroup ) Then we will switch over to the recently created user dedicated for the sinusbot, change the working directory and to download the latest Sinusbot release: su sinusbot cd /opt/sinusbot wget https://www.sinusbot.com/dl/sinusbot.current.tar.bz2 If that command results in SSL-Errors, you can alternatively try curl -O https://www.sinusbot.com/dl/sinusbot.current.tar.bz2 Next, extract the bot: tar -xjf sinusbot.current.tar.bz2 Copy the configuration (if you haven't started the bot before) cp config.ini.dist config.ini Now you need to download the TeamSpeak 3 Client and install it . # set the current/supported TS3 version here VERSION = \"3.5.3\" wget https://files.teamspeak-services.com/releases/client/ $VERSION /TeamSpeak3-Client-linux_amd64- $VERSION .run chmod 0755 TeamSpeak3-Client-linux_amd64- $VERSION .run ./TeamSpeak3-Client-linux_amd64- $VERSION .run You will need to accept the terms by pressing: Enter , Q , Y , Enter . Afterwards you can delete the file: rm TeamSpeak3-Client-linux_amd64-$VERSION.run Now you need to configure the ini-File of the bot to match your directories. nano config.ini Make sure that the TS3Path is correct (if you followed this tutorial step by step, it should already match): TS3Path = \"/opt/sinusbot/TeamSpeak3-Client-linux_amd64/ts3client_linux_amd64\" Close the editor ( Ctrl + O , Enter , Ctrl + X ). Remove the file 'libqxcb-glx-integration.so' from the clients 'xcbglintegrations' directory: rm TeamSpeak3-Client-linux_amd64/xcbglintegrations/libqxcb-glx-integration.so Create the plugins folder in the ts3client directory: mkdir TeamSpeak3-Client-linux_amd64/plugins And finally copy the plugin to the plugins-directory of the TeamSpeak-Installation cp plugin/libsoundbot_plugin.so TeamSpeak3-Client-linux_amd64/plugins/ Just to make sure that the bot is executable, enter chmod 755 sinusbot (optional) To enable playback support for YouTube URLs and several other sites, we recommend installing youtube-dl . Usage \ud83d\udd17 As the bot won't run as root you will need to switch to the user that you have installed the bot on, if you followed the tutorial, this will be 'sinusbot\". To do this use the following command: su sinusbot Starting the bot ./sinusbot Stopping the bot with Ctrl + C If you want to keep the bot running when you exit out of the terminal follow the instruction on how to install a startscript . Now login at http://<your ip>:8087/ with user admin and the password provided on first run. (see FAQ on how to reset) Using a startscript \ud83d\udd17 These instructions need to be done as the root user. Download the startscript: curl -o /lib/systemd/system/sinusbot.service https://raw.githubusercontent.com/SinusBot/linux-startscript/master/sinusbot.service Then edit the file: nano /lib/systemd/system/sinusbot.service And replace the following placeholders to match your installation: placeholder description example YOUR_USER Your user who starts the bot sinusbot YOURPATH_TO_THE_BOT_BINARY Your path to the SinusBot binary /opt/sinusbot/sinusbot YOURPATH_TO_THE_BOT Your path to the SinusBot install directory /opt/sinusbot Reload systemd: systemctl daemon-reload Enable autostart (optional): systemctl enable sinusbot Start the sinusbot: systemctl start sinusbot Troubleshooting: This requires you to have systemd as default; You can check this with grep \"Name\" /proc/1/status - It should return: Name: systemd . If you do not have systemd, install systemd and then set systemd as default . To see the log and check for errors you can use systemctl status sinusbot and journalctl -u sinusbot -f . Update \ud83d\udd17 Update the SinusBot \ud83d\udd17 Note: The following instructions assume that you've followed this guide - otherwise you might need to slightly adapt the commands to fit your installation. Before continuing you should install the dependencies mentioned at the beginning of the \"Manual installation\" section . The update process is the same as the installation, we simply download and unpack the new SinusBot version over the old one. First stop your sinusbot (e.g. systemctl stop sinusbot if you use the systemd-startscript) and then run the following commands: # go into the sinusbot directory cd /opt/sinusbot # download the current release wget https://www.sinusbot.com/dl/sinusbot.current.tar.bz2 # unpack it tar -xjvf sinusbot.current.tar.bz2 # copy the plugin cp plugin/libsoundbot_plugin.so TeamSpeak3-Client-linux_amd64/plugins/ # fix the file permissions if you're doing this as root chown -R sinusbot:sinusbot /opt/sinusbot Afterwards, start the SinusBot again (e.g. systemctl start sinusbot ) Note: When updating the SinusBot, you should also Update the TeamSpeak Client . Update the TeamSpeak Client \ud83d\udd17 Before continuing you should install the dependencies mentioned at the beginning of the \"Manual installation\" section . The update process is the same as the installation, we simply download and unpack the new TeamSpeak Client over the old one. First stop your sinusbot (e.g. systemctl stop sinusbot if you use the systemd-startscript) and then run the following commands: # go into the sinusbot directory cd /opt/sinusbot # set the current/supported TS3 version here VERSION = \"3.5.3\" wget https://files.teamspeak-services.com/releases/client/ $VERSION /TeamSpeak3-Client-linux_amd64- $VERSION .run chmod 0755 TeamSpeak3-Client-linux_amd64- $VERSION .run ./TeamSpeak3-Client-linux_amd64- $VERSION .run You will need to accept the terms by pressing: Enter , Q , Y , Enter . Afterwards you can delete the file: rm TeamSpeak3-Client-linux_amd64-$VERSION.run Now remove the data/ts3 directory and the libqxcb-glx-integration.so file as well: rm -rf data/ts3 rm TeamSpeak3-Client-linux_amd64/xcbglintegrations/libqxcb-glx-integration.so And finally copy the plugin to the plugins-directory of the TeamSpeak-Installation cp plugin/libsoundbot_plugin.so TeamSpeak3-Client-linux_amd64/plugins/ # fix the file permissions if you're doing this as root chown -R sinusbot:sinusbot /opt/sinusbot Afterwards, start the SinusBot again (e.g. systemctl start sinusbot ) Migrating to another System \ud83d\udd17 First, install the SinusBot on the new system according to our guides. Afterwards, copy over the data -folder, scripts -folder, config.ini and private.dat from your old SinusBot installation folder (typically /opt/sinusbot/ on Linux). Depending on how you copied the files, you might need to fix your file permissions afterwards. When finished, stop the SinusBot on the old system (e.g. systemctl stop sinusbot ) and (re)start the SinusBot on the new system (e.g. systemctl restart sinusbot ). Troubleshooting \ud83d\udd17 Look for any errors in the sinusbot/instance log and try to look-up solutions on our forum or your favorite search engine. If you ask us or our community for help then please provide the output of the diag script and follow everything that is mentioned in READ ME BEFORE YOU POST . If you use the systemd-startscript you can check the status with systemctl status sinusbot . Logs can be viewed using journalctl -u sinusbot -f --since \"2 hours ago\" . The SinusBot itself is closed-source, but some of the resources are open-source and available in the SinusBot GitHub Organization - contributions welcome. Documentation Scripting Documentation Linux-Installer Startscript Default SinusBot Scripts SinusBot Docker Image and more!","title":"Linux"},{"location":"installation/linux/#requirements","text":"The TeamSpeak Client 3.3+ requires at least a Linux Kernel of version 3.17 or higher! You can check your Linux Kernel version with uname -a . Make sure that your OS (Operating System) is up-to-date. We recommend recent LTS releases such as Ubuntu 20.04 or Debian 10 (buster), minimal required versions: Debian 9+ Ubuntu 18.04+ CentOS 7+ Note: While it might be possible to use older versions in particular cases, we can only provide support for the above mentioned ones. When choosing a VPS (virtual private server), make sure that it is not based on OpenVZ, because the Linux kernel will be too old. Instead choose a KVM or LCX based VPS with a recent OS. The server should have at least 512MB or 1GB of free RAM. Although the SinusBot itself doesn't require much RAM, the TeamSpeak Client(s) often take up the most memory. Make sure that the server has enough free disk space to fit your needs.","title":"Requirements"},{"location":"installation/linux/#compatible-versions","text":"SinusBot Version TS3 Client Version Linux Kernel Version TeamSpeak Server Version 1.0.0-beta3 and later 3.3+ 3.17+ >= 3.8.x 1.0.0-beta2, 1.0.0-beta1 3.2.5 2.6+ <= 3.9.x Please note that we do not support old beta releases. See Support Policy / Support Grundregeln .","title":"Compatible Versions"},{"location":"installation/linux/#installer-script","text":"If you are new to Linux and/or wish to have everything installed for you in a more convenient way, we encourage you to use the Installer Script .","title":"Installer Script"},{"location":"installation/linux/#manual-installation","text":"The TeamSpeak Client 3.3+ requires at least a Linux Kernel of version 3.17 or higher! You can check your Linux Kernel version with uname -a . Let's start by installing several dependencies: apt-get update apt-get install -y x11vnc xvfb libxcursor1 ca-certificates curl bzip2 libnss3 libegl1-mesa x11-xkb-utils libasound2 libpci3 libxslt1.1 libxkbcommon0 libxss1 libxcomposite1 update-ca-certificates On Debian and some Ubuntu versions you might as well have to install, so at least try: apt-get install libglib2.0-0 In case of Ubuntu 18.04 : Depending on the Ubuntu installation the universe repository of Ubuntu is not activated, resulting in missing packages for required dependencies x11vnc and xvfb . When said problem occurs, enable the universe repository by using following command: add-apt-repository universe apt-get update After all required dependencies are installed, let's assume that you're going to install the bot to /opt/sinusbot and are using the user sinusbot with the group sinusbot . We will install the bot with root then switch to this user account when running the bot. You will need to create an new user sinusbot on your server, so to do so type the following command. adduser --disabled-login sinusbot This created user is used to start the bot with usual user privileges (which is highly recommended!), as the bot should not run as root for security-reasons. Next we will create and prepare the folder where Sinusbot will be installed to, by issuing following commands as the root user: # create folder mkdir -p /opt/sinusbot # grant sinusbot user permissions on specified folder chown -R sinusbot:sinusbot /opt/sinusbot (If you're using another user/group than \"sinusbot\", replace sinusbot:sinusbot with yourusername:yourusergroup ) Then we will switch over to the recently created user dedicated for the sinusbot, change the working directory and to download the latest Sinusbot release: su sinusbot cd /opt/sinusbot wget https://www.sinusbot.com/dl/sinusbot.current.tar.bz2 If that command results in SSL-Errors, you can alternatively try curl -O https://www.sinusbot.com/dl/sinusbot.current.tar.bz2 Next, extract the bot: tar -xjf sinusbot.current.tar.bz2 Copy the configuration (if you haven't started the bot before) cp config.ini.dist config.ini Now you need to download the TeamSpeak 3 Client and install it . # set the current/supported TS3 version here VERSION = \"3.5.3\" wget https://files.teamspeak-services.com/releases/client/ $VERSION /TeamSpeak3-Client-linux_amd64- $VERSION .run chmod 0755 TeamSpeak3-Client-linux_amd64- $VERSION .run ./TeamSpeak3-Client-linux_amd64- $VERSION .run You will need to accept the terms by pressing: Enter , Q , Y , Enter . Afterwards you can delete the file: rm TeamSpeak3-Client-linux_amd64-$VERSION.run Now you need to configure the ini-File of the bot to match your directories. nano config.ini Make sure that the TS3Path is correct (if you followed this tutorial step by step, it should already match): TS3Path = \"/opt/sinusbot/TeamSpeak3-Client-linux_amd64/ts3client_linux_amd64\" Close the editor ( Ctrl + O , Enter , Ctrl + X ). Remove the file 'libqxcb-glx-integration.so' from the clients 'xcbglintegrations' directory: rm TeamSpeak3-Client-linux_amd64/xcbglintegrations/libqxcb-glx-integration.so Create the plugins folder in the ts3client directory: mkdir TeamSpeak3-Client-linux_amd64/plugins And finally copy the plugin to the plugins-directory of the TeamSpeak-Installation cp plugin/libsoundbot_plugin.so TeamSpeak3-Client-linux_amd64/plugins/ Just to make sure that the bot is executable, enter chmod 755 sinusbot (optional) To enable playback support for YouTube URLs and several other sites, we recommend installing youtube-dl .","title":"Manual installation"},{"location":"installation/linux/#usage","text":"As the bot won't run as root you will need to switch to the user that you have installed the bot on, if you followed the tutorial, this will be 'sinusbot\". To do this use the following command: su sinusbot Starting the bot ./sinusbot Stopping the bot with Ctrl + C If you want to keep the bot running when you exit out of the terminal follow the instruction on how to install a startscript . Now login at http://<your ip>:8087/ with user admin and the password provided on first run. (see FAQ on how to reset)","title":"Usage"},{"location":"installation/linux/#using-a-startscript","text":"These instructions need to be done as the root user. Download the startscript: curl -o /lib/systemd/system/sinusbot.service https://raw.githubusercontent.com/SinusBot/linux-startscript/master/sinusbot.service Then edit the file: nano /lib/systemd/system/sinusbot.service And replace the following placeholders to match your installation: placeholder description example YOUR_USER Your user who starts the bot sinusbot YOURPATH_TO_THE_BOT_BINARY Your path to the SinusBot binary /opt/sinusbot/sinusbot YOURPATH_TO_THE_BOT Your path to the SinusBot install directory /opt/sinusbot Reload systemd: systemctl daemon-reload Enable autostart (optional): systemctl enable sinusbot Start the sinusbot: systemctl start sinusbot Troubleshooting: This requires you to have systemd as default; You can check this with grep \"Name\" /proc/1/status - It should return: Name: systemd . If you do not have systemd, install systemd and then set systemd as default . To see the log and check for errors you can use systemctl status sinusbot and journalctl -u sinusbot -f .","title":"Using a startscript"},{"location":"installation/linux/#update","text":"","title":"Update"},{"location":"installation/linux/#update-the-sinusbot","text":"Note: The following instructions assume that you've followed this guide - otherwise you might need to slightly adapt the commands to fit your installation. Before continuing you should install the dependencies mentioned at the beginning of the \"Manual installation\" section . The update process is the same as the installation, we simply download and unpack the new SinusBot version over the old one. First stop your sinusbot (e.g. systemctl stop sinusbot if you use the systemd-startscript) and then run the following commands: # go into the sinusbot directory cd /opt/sinusbot # download the current release wget https://www.sinusbot.com/dl/sinusbot.current.tar.bz2 # unpack it tar -xjvf sinusbot.current.tar.bz2 # copy the plugin cp plugin/libsoundbot_plugin.so TeamSpeak3-Client-linux_amd64/plugins/ # fix the file permissions if you're doing this as root chown -R sinusbot:sinusbot /opt/sinusbot Afterwards, start the SinusBot again (e.g. systemctl start sinusbot ) Note: When updating the SinusBot, you should also Update the TeamSpeak Client .","title":"Update the SinusBot"},{"location":"installation/linux/#update-the-teamspeak-client","text":"Before continuing you should install the dependencies mentioned at the beginning of the \"Manual installation\" section . The update process is the same as the installation, we simply download and unpack the new TeamSpeak Client over the old one. First stop your sinusbot (e.g. systemctl stop sinusbot if you use the systemd-startscript) and then run the following commands: # go into the sinusbot directory cd /opt/sinusbot # set the current/supported TS3 version here VERSION = \"3.5.3\" wget https://files.teamspeak-services.com/releases/client/ $VERSION /TeamSpeak3-Client-linux_amd64- $VERSION .run chmod 0755 TeamSpeak3-Client-linux_amd64- $VERSION .run ./TeamSpeak3-Client-linux_amd64- $VERSION .run You will need to accept the terms by pressing: Enter , Q , Y , Enter . Afterwards you can delete the file: rm TeamSpeak3-Client-linux_amd64-$VERSION.run Now remove the data/ts3 directory and the libqxcb-glx-integration.so file as well: rm -rf data/ts3 rm TeamSpeak3-Client-linux_amd64/xcbglintegrations/libqxcb-glx-integration.so And finally copy the plugin to the plugins-directory of the TeamSpeak-Installation cp plugin/libsoundbot_plugin.so TeamSpeak3-Client-linux_amd64/plugins/ # fix the file permissions if you're doing this as root chown -R sinusbot:sinusbot /opt/sinusbot Afterwards, start the SinusBot again (e.g. systemctl start sinusbot )","title":"Update the TeamSpeak Client"},{"location":"installation/linux/#migrating-to-another-system","text":"First, install the SinusBot on the new system according to our guides. Afterwards, copy over the data -folder, scripts -folder, config.ini and private.dat from your old SinusBot installation folder (typically /opt/sinusbot/ on Linux). Depending on how you copied the files, you might need to fix your file permissions afterwards. When finished, stop the SinusBot on the old system (e.g. systemctl stop sinusbot ) and (re)start the SinusBot on the new system (e.g. systemctl restart sinusbot ).","title":"Migrating to another System"},{"location":"installation/linux/#troubleshooting","text":"Look for any errors in the sinusbot/instance log and try to look-up solutions on our forum or your favorite search engine. If you ask us or our community for help then please provide the output of the diag script and follow everything that is mentioned in READ ME BEFORE YOU POST . If you use the systemd-startscript you can check the status with systemctl status sinusbot . Logs can be viewed using journalctl -u sinusbot -f --since \"2 hours ago\" . The SinusBot itself is closed-source, but some of the resources are open-source and available in the SinusBot GitHub Organization - contributions welcome. Documentation Scripting Documentation Linux-Installer Startscript Default SinusBot Scripts SinusBot Docker Image and more!","title":"Troubleshooting"},{"location":"installation/windows/","text":"Download and install the latest 64-Bit TeamSpeak 3 Client for Windows. Download the SinusBot Installer for Windows and start it. Optionally you can install youtube-dl afterwards to allow you to play media from YouTube and other supported sites Be sure that \"TeamSpeak 3 Support\" is checked, as shown in the following picture: If the option is not available then the installer could not find a compatible TeamSpeak Client (see step 1). If you continue installation without this checkbox enabled the SinusBot will only be able to connect to Discord. To Log in Double click the SinusBot logo in the tray (next to your clock at the bottom right of the screen) to login. Troubleshooting \ud83d\udd17 Look for any errors in the SinusBot/instance log and try to look-up solutions on our forum or your favorite search engine. If you ask us or our community for help then please provide all of the information mentioned in READ ME BEFORE YOU POST . I can only connect the SinusBot to Discord, how can I fix it? \ud83d\udd17 As mentioned above: \"TeamSpeak 3 Support\" needs to be enabled when installing the SinusBot. To fix this you need to: Delete the SinusBot Uninstall old or otherwise incompatible TeamSpeak Clients. Install a compatible (latest version, 64-Bit) TeamSpeak Client Reinstall the SinusBot as described above If that's still not working then make sure to uninstall any old and 32-Bit TeamSpeak Clients and reinstall the latest 64-Bit TeamSpeak Client in the default location . bot muted after disconnecting from remote desktop \ud83d\udd17 The Bot mutes itself after I disconnect from remote desktop. Why? How do I fix it? That's the fault of the TeamSpeak Client, see this post from a TeamSpeak Developer. There are a few threads about this on our forum: [ENG] forum.sinusbot.com/threads/5521/#post-32460 [ENG] forum.sinusbot.com/threads/2496/ [GER] forum.sinusbot.com/threads/6498/#post-36130 [GER] forum.sinusbot.com/threads/5289/ There is no official support from TeamSpeak to disable this behavior but there is a workaround as described in this post (in german): They've solved this by installing the TS3 plugin \"Session Lock Actions\" and changing the settings as shown below (set to \"ticked\" checkbox, not \"filled\").","title":"Windows"},{"location":"installation/windows/#troubleshooting","text":"Look for any errors in the SinusBot/instance log and try to look-up solutions on our forum or your favorite search engine. If you ask us or our community for help then please provide all of the information mentioned in READ ME BEFORE YOU POST .","title":"Troubleshooting"},{"location":"installation/windows/#i-can-only-connect-the-sinusbot-to-discord-how-can-i-fix-it","text":"As mentioned above: \"TeamSpeak 3 Support\" needs to be enabled when installing the SinusBot. To fix this you need to: Delete the SinusBot Uninstall old or otherwise incompatible TeamSpeak Clients. Install a compatible (latest version, 64-Bit) TeamSpeak Client Reinstall the SinusBot as described above If that's still not working then make sure to uninstall any old and 32-Bit TeamSpeak Clients and reinstall the latest 64-Bit TeamSpeak Client in the default location .","title":"I can only connect the SinusBot to Discord, how can I fix it?"},{"location":"installation/windows/#bot-muted-after-disconnecting-from-remote-desktop","text":"The Bot mutes itself after I disconnect from remote desktop. Why? How do I fix it? That's the fault of the TeamSpeak Client, see this post from a TeamSpeak Developer. There are a few threads about this on our forum: [ENG] forum.sinusbot.com/threads/5521/#post-32460 [ENG] forum.sinusbot.com/threads/2496/ [GER] forum.sinusbot.com/threads/6498/#post-36130 [GER] forum.sinusbot.com/threads/5289/ There is no official support from TeamSpeak to disable this behavior but there is a workaround as described in this post (in german): They've solved this by installing the TS3 plugin \"Session Lock Actions\" and changing the settings as shown below (set to \"ticked\" checkbox, not \"filled\").","title":"bot muted after disconnecting from remote desktop"},{"location":"reverse-proxy/apache2/","text":"If you want to serve the web interface of the SinusBot encrypted or with the rest of your website, you usually want to setup a reverse proxy. Most of the time, you already have a web server (like apache2 or nginx) in place, which you can use to forward the incoming traffic to the SinusBot. First you need to add a DNS record (A) which is pointing from your subdomain (e.g. sinusbot.example.com) to the IP of your server. After that, create a file at /etc/apache2/sites-available/sinusbot.conf with the following content. Adjust the value of the following variables in the configuration examples below: ServerName ProxyPass and ProxyPassReverse (port of your sinusbot) SSLCertificate* (SSL only!) If you are using no SSL (http): <VirtualHost *:80 > ServerName sinusbot.example.com ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined ProxyPreserveHost On ProxyPass / http://127.0.0.1:8087/ ProxyPassReverse / http://127.0.0.1:8087/ </VirtualHost> If you are using SSL (https) with http->https redirect: <VirtualHost *:80 > ServerName sinusbot.example.com ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined RewriteEngine on RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L] </VirtualHost> <VirtualHost *:443 > ServerName bot.example.tld SSLEngine On SSLCertificateFile /opt/ssl/cert.pem SSLCertificateKeyFile /opt/ssl/privkey.pem SSLCertificateChainFile /opt/ssl/fullchain.pem ProxyPass / http://127.0.0.1:8087/ ProxyPassReverse / http://127.0.0.1:8087/ ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> Afterwards you need to link the file to the sites-enabled directory: ln -sf /etc/apache2/sites-available/sinusbot.conf /etc/apache2/sites-enabled Enable the proxy-module: a2enmod proxy Enable the http-proxy-module: a2enmod proxy_http Enable the SSL-module a2enmod ssl Enable the rewrite-module: a2enmod rewrite Restart apache2: systemctl restart apache2 Now just follow the common adaptations for reverse proxies.","title":"Apache 2"},{"location":"reverse-proxy/common-adaptations/","text":"It's recommend to modify the sinusbot's config.ini in two ways: Set the ListenHost to localhost or 127.0.0.1 as the Sinusbot is now only meant to be accessed via the reverse proxy. Set IsProxied to true so that the Sinusbot knows that the web-interface is behind a reverse proxy and will handle the IPs correctly.","title":"Common Adaptations"},{"location":"reverse-proxy/nginx/","text":"If you want to serve the web interface of the SinusBot encrypted or with the rest of your website, you usually want to setup a reverse proxy. Most of the time, you already have a web server (like Apache2 or nginx) in place, which you can use to forward the incoming traffic to the SinusBot. First you need to add a DNS record (for example an A-record) that points from your subdomain (e.g. sinusbot) to the IP of your server. After that, create a file at /etc/nginx/sites-available/sinusbot.conf with the following content. You need to adjust the value of the following variables in the configuration examples below: server_name (domain/subdomain) proxy_pass (local address of your sinusbot) ssl_certificate (SSL only) ssl_certificate_key (SSL only) If you are using no SSL (http): server { listen 80 ; listen [::]:80 ; # Set your domain here: server_name sinusbot.example.com ; client_max_body_size 200M ; access_log /var/log/nginx/sinusbot.access.log ; error_log /var/log/nginx/sinusbot.error.log ; location / { proxy_pass http://127.0.0.1:8087 ; proxy_http_version 1 .1 ; proxy_set_header X-Forwarded-For $remote_addr ; # pass upgrade/connection headers for websockets proxy_set_header Upgrade $http_upgrade ; proxy_set_header Connection \"Upgrade\" ; } } If you are using SSL (https) with http->https redirect: server { listen 80 ; listen [::]:80 ; # Set your domain here: server_name sinusbot.example.com ; access_log /var/log/nginx/sinusbot.access.log ; error_log /var/log/nginx/sinusbot.error.log ; return 301 https:// $host$request_uri ; } server { listen 443 ssl http2 ; listen [::]:443 ssl http2 ; # Set your domain here: server_name sinusbot.example.com ; client_max_body_size 200M ; access_log /var/log/nginx/sinusbot.access.log ; error_log /var/log/nginx/sinusbot.error.log ; # Set the path to your ssl cert here: ssl on ; ssl_certificate /opt/ssl/fullchain.pem ; ssl_certificate_key /opt/ssl/privkey.pem ; location / { proxy_pass http://127.0.0.1:8087 ; proxy_http_version 1 .1 ; proxy_set_header X-Forwarded-For $remote_addr ; # pass upgrade/connection headers for websockets proxy_set_header Upgrade $http_upgrade ; proxy_set_header Connection \"Upgrade\" ; } } Afterwards you need to link the file to the sites-enabled directory: ln -sf /etc/nginx/sites-available/sinusbot.conf /etc/nginx/sites-enabled Check for errors: nginx -t Reload nginx: nginx -s reload Now just follow the common adaptations for reverse proxies.","title":"NGINX"}]}